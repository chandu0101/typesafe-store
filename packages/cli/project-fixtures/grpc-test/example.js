'use strict'; // code generated by pbf v3.2.1

var PhoneType2 = exports.PhoneType2 = {
    "MOBILE": {
        "value": 0,
        "options": {}
    },
    "HOME": {
        "value": 1,
        "options": {}
    },
    "WORK": {
        "value": 2,
        "options": {}
    }
};

// Person ========================================

var Person = exports.Person = {};

Person.read = function (pbf, end) {
    return pbf.readFields(Person._readField, {name: "", id: 0, email: "", bf: null, projects: {}, doublef: 0, floatf: 0, int64f: 0, uint64f: 0, uint32f: 0, sint32f: 0, sint64f: 0, fixed32f: 0, fixed64f: 0, sfixed32f: 0, sfixed64f: 0, boolf: false, rstringf: [], rint32f: [], rfloatf: [], rint64f: [], ruint64f: [], ruint32f: [], rsint32f: [], rsint64f: [], rfixed32f: [], rfixed64f: [], rsfixed32f: [], rsfixed64f: [], rboolf: [], rbytef: [], rdoublef: [], mapenums: {}, mapenums2: {}, mapints: {}, mapDouble: {}, mapFixed32: {}, mapFixed64: {}, mapSFixed32: {}, mapsfixed64: {}, mapUint32: {}, mapOneOfMessage: {}, plainOneOfSample: null, renumsf: [], phones: [], phonesMap: {}, last_updated: ""}, end);
};
Person._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
    else if (tag === 2) obj.id = pbf.readVarint(true);
    else if (tag === 3) obj.email = pbf.readString();
    else if (tag === 6) obj.bf = pbf.readBytes();
    else if (tag === 7)  { var entry = Person._FieldEntry7.read(pbf, pbf.readVarint() + pbf.pos); obj.projects[entry.key] = entry.value; }
    else if (tag === 8) obj.doublef = pbf.readDouble();
    else if (tag === 9) obj.floatf = pbf.readFloat();
    else if (tag === 10) obj.int64f = pbf.readVarint(true);
    else if (tag === 11) obj.uint64f = pbf.readVarint();
    else if (tag === 12) obj.uint32f = pbf.readVarint();
    else if (tag === 13) obj.sint32f = pbf.readSVarint();
    else if (tag === 14) obj.sint64f = pbf.readSVarint();
    else if (tag === 15) obj.fixed32f = pbf.readFixed32();
    else if (tag === 16) obj.fixed64f = pbf.readFixed64();
    else if (tag === 17) obj.sfixed32f = pbf.readSFixed32();
    else if (tag === 18) obj.sfixed64f = pbf.readSFixed64();
    else if (tag === 19) obj.boolf = pbf.readBoolean();
    else if (tag === 20) obj.rstringf.push(pbf.readString());
    else if (tag === 21) pbf.readPackedVarint(obj.rint32f, true);
    else if (tag === 22) pbf.readPackedFloat(obj.rfloatf);
    else if (tag === 23) pbf.readPackedVarint(obj.rint64f, true);
    else if (tag === 24) pbf.readPackedVarint(obj.ruint64f);
    else if (tag === 25) pbf.readPackedVarint(obj.ruint32f);
    else if (tag === 26) pbf.readPackedSVarint(obj.rsint32f);
    else if (tag === 27) pbf.readPackedSVarint(obj.rsint64f);
    else if (tag === 28) pbf.readPackedFixed32(obj.rfixed32f);
    else if (tag === 29) pbf.readPackedFixed64(obj.rfixed64f);
    else if (tag === 30) pbf.readPackedSFixed32(obj.rsfixed32f);
    else if (tag === 31) obj.rsfixed64f.push(pbf.readSFixed64());
    else if (tag === 32) pbf.readPackedBoolean(obj.rboolf);
    else if (tag === 33) obj.rbytef.push(pbf.readBytes());
    else if (tag === 34) pbf.readPackedDouble(obj.rdoublef);
    else if (tag === 35)  { entry = Person._FieldEntry35.read(pbf, pbf.readVarint() + pbf.pos); obj.mapenums[entry.key] = entry.value; }
    else if (tag === 36)  { entry = Person._FieldEntry36.read(pbf, pbf.readVarint() + pbf.pos); obj.mapenums2[entry.key] = entry.value; }
    else if (tag === 37)  { entry = Person._FieldEntry37.read(pbf, pbf.readVarint() + pbf.pos); obj.mapints[entry.key] = entry.value; }
    else if (tag === 38)  { entry = Person._FieldEntry38.read(pbf, pbf.readVarint() + pbf.pos); obj.mapDouble[entry.key] = entry.value; }
    else if (tag === 39)  { entry = Person._FieldEntry39.read(pbf, pbf.readVarint() + pbf.pos); obj.mapFixed32[entry.key] = entry.value; }
    else if (tag === 40)  { entry = Person._FieldEntry40.read(pbf, pbf.readVarint() + pbf.pos); obj.mapFixed64[entry.key] = entry.value; }
    else if (tag === 41)  { entry = Person._FieldEntry41.read(pbf, pbf.readVarint() + pbf.pos); obj.mapSFixed32[entry.key] = entry.value; }
    else if (tag === 42)  { entry = Person._FieldEntry42.read(pbf, pbf.readVarint() + pbf.pos); obj.mapsfixed64[entry.key] = entry.value; }
    else if (tag === 43)  { entry = Person._FieldEntry43.read(pbf, pbf.readVarint() + pbf.pos); obj.mapUint32[entry.key] = entry.value; }
    else if (tag === 44)  { entry = Person._FieldEntry44.read(pbf, pbf.readVarint() + pbf.pos); obj.mapOneOfMessage[entry.key] = entry.value; }
    else if (tag === 45) obj.plainOneOfSample = Person.SampleMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 46) pbf.readPackedVarint(obj.renumsf);
    else if (tag === 4) obj.phones.push(Person.PhoneNumber.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 44)  { entry = Person._FieldEntry44.read(pbf, pbf.readVarint() + pbf.pos); obj.phonesMap[entry.key] = entry.value; }
    else if (tag === 5) obj.last_updated = pbf.readString();
};
Person.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
    if (obj.id) pbf.writeVarintField(2, obj.id);
    if (obj.email) pbf.writeStringField(3, obj.email);
    if (obj.bf) pbf.writeBytesField(6, obj.bf);
    if (obj.projects) for (var i in obj.projects) if (Object.prototype.hasOwnProperty.call(obj.projects, i)) pbf.writeMessage(7, Person._FieldEntry7.write, { key: i, value: obj.projects[i] });
    if (obj.doublef) pbf.writeDoubleField(8, obj.doublef);
    if (obj.floatf) pbf.writeFloatField(9, obj.floatf);
    if (obj.int64f) pbf.writeVarintField(10, obj.int64f);
    if (obj.uint64f) pbf.writeVarintField(11, obj.uint64f);
    if (obj.uint32f) pbf.writeVarintField(12, obj.uint32f);
    if (obj.sint32f) pbf.writeSVarintField(13, obj.sint32f);
    if (obj.sint64f) pbf.writeSVarintField(14, obj.sint64f);
    if (obj.fixed32f) pbf.writeFixed32Field(15, obj.fixed32f);
    if (obj.fixed64f) pbf.writeFixed64Field(16, obj.fixed64f);
    if (obj.sfixed32f) pbf.writeSFixed32Field(17, obj.sfixed32f);
    if (obj.sfixed64f) pbf.writeSFixed64Field(18, obj.sfixed64f);
    if (obj.boolf) pbf.writeBooleanField(19, obj.boolf);
    if (obj.rstringf) for (i = 0; i < obj.rstringf.length; i++) pbf.writeStringField(20, obj.rstringf[i]);
    if (obj.rint32f) pbf.writePackedVarint(21, obj.rint32f);
    if (obj.rfloatf) pbf.writePackedFloat(22, obj.rfloatf);
    if (obj.rint64f) pbf.writePackedVarint(23, obj.rint64f);
    if (obj.ruint64f) pbf.writePackedVarint(24, obj.ruint64f);
    if (obj.ruint32f) pbf.writePackedVarint(25, obj.ruint32f);
    if (obj.rsint32f) pbf.writePackedSVarint(26, obj.rsint32f);
    if (obj.rsint64f) pbf.writePackedSVarint(27, obj.rsint64f);
    if (obj.rfixed32f) pbf.writePackedFixed32(28, obj.rfixed32f);
    if (obj.rfixed64f) pbf.writePackedFixed64(29, obj.rfixed64f);
    if (obj.rsfixed32f) pbf.writePackedSFixed32(30, obj.rsfixed32f);
    if (obj.rsfixed64f) for (i = 0; i < obj.rsfixed64f.length; i++) pbf.writeSFixed64Field(31, obj.rsfixed64f[i]);
    if (obj.rboolf) pbf.writePackedBoolean(32, obj.rboolf);
    if (obj.rbytef) for (i = 0; i < obj.rbytef.length; i++) pbf.writeBytesField(33, obj.rbytef[i]);
    if (obj.rdoublef) pbf.writePackedDouble(34, obj.rdoublef);
    if (obj.mapenums) for (i in obj.mapenums) if (Object.prototype.hasOwnProperty.call(obj.mapenums, i)) pbf.writeMessage(35, Person._FieldEntry35.write, { key: i, value: obj.mapenums[i] });
    if (obj.mapenums2) for (i in obj.mapenums2) if (Object.prototype.hasOwnProperty.call(obj.mapenums2, i)) pbf.writeMessage(36, Person._FieldEntry36.write, { key: i, value: obj.mapenums2[i] });
    if (obj.mapints) for (i in obj.mapints) if (Object.prototype.hasOwnProperty.call(obj.mapints, i)) pbf.writeMessage(37, Person._FieldEntry37.write, { key: i, value: obj.mapints[i] });
    if (obj.mapDouble) for (i in obj.mapDouble) if (Object.prototype.hasOwnProperty.call(obj.mapDouble, i)) pbf.writeMessage(38, Person._FieldEntry38.write, { key: i, value: obj.mapDouble[i] });
    if (obj.mapFixed32) for (i in obj.mapFixed32) if (Object.prototype.hasOwnProperty.call(obj.mapFixed32, i)) pbf.writeMessage(39, Person._FieldEntry39.write, { key: i, value: obj.mapFixed32[i] });
    if (obj.mapFixed64) for (i in obj.mapFixed64) if (Object.prototype.hasOwnProperty.call(obj.mapFixed64, i)) pbf.writeMessage(40, Person._FieldEntry40.write, { key: i, value: obj.mapFixed64[i] });
    if (obj.mapSFixed32) for (i in obj.mapSFixed32) if (Object.prototype.hasOwnProperty.call(obj.mapSFixed32, i)) pbf.writeMessage(41, Person._FieldEntry41.write, { key: i, value: obj.mapSFixed32[i] });
    if (obj.mapsfixed64) for (i in obj.mapsfixed64) if (Object.prototype.hasOwnProperty.call(obj.mapsfixed64, i)) pbf.writeMessage(42, Person._FieldEntry42.write, { key: i, value: obj.mapsfixed64[i] });
    if (obj.mapUint32) for (i in obj.mapUint32) if (Object.prototype.hasOwnProperty.call(obj.mapUint32, i)) pbf.writeMessage(43, Person._FieldEntry43.write, { key: i, value: obj.mapUint32[i] });
    if (obj.mapOneOfMessage) for (i in obj.mapOneOfMessage) if (Object.prototype.hasOwnProperty.call(obj.mapOneOfMessage, i)) pbf.writeMessage(44, Person._FieldEntry44.write, { key: i, value: obj.mapOneOfMessage[i] });
    if (obj.plainOneOfSample) pbf.writeMessage(45, Person.SampleMessage.write, obj.plainOneOfSample);
    if (obj.renumsf) pbf.writePackedVarint(46, obj.renumsf);
    if (obj.phones) for (i = 0; i < obj.phones.length; i++) pbf.writeMessage(4, Person.PhoneNumber.write, obj.phones[i]);
    if (obj.phonesMap) for (i in obj.phonesMap) if (Object.prototype.hasOwnProperty.call(obj.phonesMap, i)) pbf.writeMessage(44, Person._FieldEntry44.write, { key: i, value: obj.phonesMap[i] });
    if (obj.last_updated) pbf.writeStringField(5, obj.last_updated);
};

Person.PhoneType = {
    "MOBILE": {
        "value": 0,
        "options": {}
    },
    "HOME": {
        "value": 1,
        "options": {}
    },
    "WORK": {
        "value": 2,
        "options": {}
    }
};

// Person.SampleMessage ========================================

Person.SampleMessage = {};

Person.SampleMessage.read = function (pbf, end) {
    return pbf.readFields(Person.SampleMessage._readField, {name: "", test_oneof: null, sub_message: 0}, end);
};
Person.SampleMessage._readField = function (tag, obj, pbf) {
    if (tag === 4) obj.name = pbf.readString(), obj.test_oneof = "name";
    else if (tag === 9) obj.sub_message = pbf.readVarint(), obj.test_oneof = "sub_message";
    else if (tag === 8) obj.name = pbf.readString();
};
Person.SampleMessage.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(4, obj.name);
    if (obj.sub_message) pbf.writeVarintField(9, obj.sub_message);
    if (obj.name) pbf.writeStringField(8, obj.name);
};

// Person.PhoneNumber ========================================

Person.PhoneNumber = {};

Person.PhoneNumber.read = function (pbf, end) {
    return pbf.readFields(Person.PhoneNumber._readField, {number: "", type: 0, number2: null, pmapNumbers: {}}, end);
};
Person.PhoneNumber._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.number = pbf.readString();
    else if (tag === 2) obj.type = pbf.readVarint();
    else if (tag === 3) obj.number2 = Person.PhoneNumber.PhoneNumber2.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4)  { var entry = Person.PhoneNumber._FieldEntry4.read(pbf, pbf.readVarint() + pbf.pos); obj.pmapNumbers[entry.key] = entry.value; }
};
Person.PhoneNumber.write = function (obj, pbf) {
    if (obj.number) pbf.writeStringField(1, obj.number);
    if (obj.type) pbf.writeVarintField(2, obj.type);
    if (obj.number2) pbf.writeMessage(3, Person.PhoneNumber.PhoneNumber2.write, obj.number2);
    if (obj.pmapNumbers) for (var i in obj.pmapNumbers) if (Object.prototype.hasOwnProperty.call(obj.pmapNumbers, i)) pbf.writeMessage(4, Person.PhoneNumber._FieldEntry4.write, { key: i, value: obj.pmapNumbers[i] });
};

// Person.PhoneNumber.PhoneNumber2 ========================================

Person.PhoneNumber.PhoneNumber2 = {};

Person.PhoneNumber.PhoneNumber2.read = function (pbf, end) {
    return pbf.readFields(Person.PhoneNumber.PhoneNumber2._readField, {number2: ""}, end);
};
Person.PhoneNumber.PhoneNumber2._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.number2 = pbf.readString();
};
Person.PhoneNumber.PhoneNumber2.write = function (obj, pbf) {
    if (obj.number2) pbf.writeStringField(1, obj.number2);
};

// Person.PhoneNumber._FieldEntry4 ========================================

Person.PhoneNumber._FieldEntry4 = {};

Person.PhoneNumber._FieldEntry4.read = function (pbf, end) {
    return pbf.readFields(Person.PhoneNumber._FieldEntry4._readField, {key: "", value: null}, end);
};
Person.PhoneNumber._FieldEntry4._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = pbf.readString();
    else if (tag === 2) obj.value = Person.PhoneNumber.PhoneNumber2.read(pbf, pbf.readVarint() + pbf.pos);
};
Person.PhoneNumber._FieldEntry4.write = function (obj, pbf) {
    if (obj.key) pbf.writeStringField(1, obj.key);
    if (obj.value) pbf.writeMessage(2, Person.PhoneNumber.PhoneNumber2.write, obj.value);
};

// Person._FieldEntry7 ========================================

Person._FieldEntry7 = {};

Person._FieldEntry7.read = function (pbf, end) {
    return pbf.readFields(Person._FieldEntry7._readField, {key: "", value: ""}, end);
};
Person._FieldEntry7._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = pbf.readString();
    else if (tag === 2) obj.value = pbf.readString();
};
Person._FieldEntry7.write = function (obj, pbf) {
    if (obj.key) pbf.writeStringField(1, obj.key);
    if (obj.value) pbf.writeStringField(2, obj.value);
};

// Person._FieldEntry35 ========================================

Person._FieldEntry35 = {};

Person._FieldEntry35.read = function (pbf, end) {
    return pbf.readFields(Person._FieldEntry35._readField, {key: "", value: 0}, end);
};
Person._FieldEntry35._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = pbf.readString();
    else if (tag === 2) obj.value = pbf.readVarint();
};
Person._FieldEntry35.write = function (obj, pbf) {
    if (obj.key) pbf.writeStringField(1, obj.key);
    if (obj.value) pbf.writeVarintField(2, obj.value);
};

// Person._FieldEntry36 ========================================

Person._FieldEntry36 = {};

Person._FieldEntry36.read = function (pbf, end) {
    return pbf.readFields(Person._FieldEntry36._readField, {key: 0, value: 0}, end);
};
Person._FieldEntry36._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = pbf.readVarint(true);
    else if (tag === 2) obj.value = pbf.readVarint();
};
Person._FieldEntry36.write = function (obj, pbf) {
    if (obj.key) pbf.writeVarintField(1, obj.key);
    if (obj.value) pbf.writeVarintField(2, obj.value);
};

// Person._FieldEntry37 ========================================

Person._FieldEntry37 = {};

Person._FieldEntry37.read = function (pbf, end) {
    return pbf.readFields(Person._FieldEntry37._readField, {key: 0, value: 0}, end);
};
Person._FieldEntry37._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = pbf.readVarint(true);
    else if (tag === 2) obj.value = pbf.readVarint(true);
};
Person._FieldEntry37.write = function (obj, pbf) {
    if (obj.key) pbf.writeVarintField(1, obj.key);
    if (obj.value) pbf.writeVarintField(2, obj.value);
};

// Person._FieldEntry38 ========================================

Person._FieldEntry38 = {};

Person._FieldEntry38.read = function (pbf, end) {
    return pbf.readFields(Person._FieldEntry38._readField, {key: "", value: 0}, end);
};
Person._FieldEntry38._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = pbf.readString();
    else if (tag === 2) obj.value = pbf.readDouble();
};
Person._FieldEntry38.write = function (obj, pbf) {
    if (obj.key) pbf.writeStringField(1, obj.key);
    if (obj.value) pbf.writeDoubleField(2, obj.value);
};

// Person._FieldEntry39 ========================================

Person._FieldEntry39 = {};

Person._FieldEntry39.read = function (pbf, end) {
    return pbf.readFields(Person._FieldEntry39._readField, {key: 0, value: 0}, end);
};
Person._FieldEntry39._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = pbf.readFixed32();
    else if (tag === 2) obj.value = pbf.readFixed32();
};
Person._FieldEntry39.write = function (obj, pbf) {
    if (obj.key) pbf.writeFixed32Field(1, obj.key);
    if (obj.value) pbf.writeFixed32Field(2, obj.value);
};

// Person._FieldEntry40 ========================================

Person._FieldEntry40 = {};

Person._FieldEntry40.read = function (pbf, end) {
    return pbf.readFields(Person._FieldEntry40._readField, {key: 0, value: 0}, end);
};
Person._FieldEntry40._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = pbf.readFixed64();
    else if (tag === 2) obj.value = pbf.readFixed64();
};
Person._FieldEntry40.write = function (obj, pbf) {
    if (obj.key) pbf.writeFixed64Field(1, obj.key);
    if (obj.value) pbf.writeFixed64Field(2, obj.value);
};

// Person._FieldEntry41 ========================================

Person._FieldEntry41 = {};

Person._FieldEntry41.read = function (pbf, end) {
    return pbf.readFields(Person._FieldEntry41._readField, {key: 0, value: 0}, end);
};
Person._FieldEntry41._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = pbf.readSFixed32();
    else if (tag === 2) obj.value = pbf.readSFixed32();
};
Person._FieldEntry41.write = function (obj, pbf) {
    if (obj.key) pbf.writeSFixed32Field(1, obj.key);
    if (obj.value) pbf.writeSFixed32Field(2, obj.value);
};

// Person._FieldEntry42 ========================================

Person._FieldEntry42 = {};

Person._FieldEntry42.read = function (pbf, end) {
    return pbf.readFields(Person._FieldEntry42._readField, {key: 0, value: 0}, end);
};
Person._FieldEntry42._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = pbf.readSFixed64();
    else if (tag === 2) obj.value = pbf.readSFixed64();
};
Person._FieldEntry42.write = function (obj, pbf) {
    if (obj.key) pbf.writeSFixed64Field(1, obj.key);
    if (obj.value) pbf.writeSFixed64Field(2, obj.value);
};

// Person._FieldEntry43 ========================================

Person._FieldEntry43 = {};

Person._FieldEntry43.read = function (pbf, end) {
    return pbf.readFields(Person._FieldEntry43._readField, {key: 0, value: 0}, end);
};
Person._FieldEntry43._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = pbf.readVarint();
    else if (tag === 2) obj.value = pbf.readVarint();
};
Person._FieldEntry43.write = function (obj, pbf) {
    if (obj.key) pbf.writeVarintField(1, obj.key);
    if (obj.value) pbf.writeVarintField(2, obj.value);
};

// Person._FieldEntry44 ========================================

Person._FieldEntry44 = {};

Person._FieldEntry44.read = function (pbf, end) {
    return pbf.readFields(Person._FieldEntry44._readField, {key: 0, value: null}, end);
};
Person._FieldEntry44._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = pbf.readVarint();
    else if (tag === 2) obj.value = Person.SampleMessage.read(pbf, pbf.readVarint() + pbf.pos);
};
Person._FieldEntry44.write = function (obj, pbf) {
    if (obj.key) pbf.writeVarintField(1, obj.key);
    if (obj.value) pbf.writeMessage(2, Person.SampleMessage.write, obj.value);
};

// Person._FieldEntry44 ========================================

Person._FieldEntry44 = {};

Person._FieldEntry44.read = function (pbf, end) {
    return pbf.readFields(Person._FieldEntry44._readField, {key: "", value: null}, end);
};
Person._FieldEntry44._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = pbf.readString();
    else if (tag === 2) obj.value = Person.PhoneNumber.read(pbf, pbf.readVarint() + pbf.pos);
};
Person._FieldEntry44.write = function (obj, pbf) {
    if (obj.key) pbf.writeStringField(1, obj.key);
    if (obj.value) pbf.writeMessage(2, Person.PhoneNumber.write, obj.value);
};

// AddressBook ========================================

var AddressBook = exports.AddressBook = {};

AddressBook.read = function (pbf, end) {
    return pbf.readFields(AddressBook._readField, {people: []}, end);
};
AddressBook._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.people.push(Person.read(pbf, pbf.readVarint() + pbf.pos));
};
AddressBook.write = function (obj, pbf) {
    if (obj.people) for (var i = 0; i < obj.people.length; i++) pbf.writeMessage(1, Person.write, obj.people[i]);
};

// HelloRequest ========================================

var HelloRequest = exports.HelloRequest = {};

HelloRequest.read = function (pbf, end) {
    return pbf.readFields(HelloRequest._readField, {name: ""}, end);
};
HelloRequest._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
};
HelloRequest.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
};

// RepeatHelloRequest ========================================

var RepeatHelloRequest = exports.RepeatHelloRequest = {};

RepeatHelloRequest.read = function (pbf, end) {
    return pbf.readFields(RepeatHelloRequest._readField, {name: "", count: 0}, end);
};
RepeatHelloRequest._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
    else if (tag === 2) obj.count = pbf.readVarint(true);
};
RepeatHelloRequest.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
    if (obj.count) pbf.writeVarintField(2, obj.count);
};

// HelloReply ========================================

var HelloReply = exports.HelloReply = {};

HelloReply.read = function (pbf, end) {
    return pbf.readFields(HelloReply._readField, {message: ""}, end);
};
HelloReply._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.message = pbf.readString();
};
HelloReply.write = function (obj, pbf) {
    if (obj.message) pbf.writeStringField(1, obj.message);
};
