{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./workers/worker.ts"],"names":[],"mappings":"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","file":"worker.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./workers/worker.ts\");\n","\n\n         \nexport type WorkerFetchInput = { kind: \"Fetch\", input: { url: string, options: RequestInit, responseType: string, abortable?: boolean, freq?: any, grpc?: { dsf: string }, graphql?: { multiOp?: boolean }, tf?: string }, }\nexport type WorkerSyncInput = { kind: \"Sync\", input: { propAccessArray: string[], payload?: any, abortable?: boolean, state: any, workerFunction: string } }\nexport type WorkerAbort = { kind: \"WorkerAbort\" }\nexport type WorkerInput = WorkerFetchInput\n    | WorkerSyncInput | WorkerAbort\n\nexport type WorkerOutputStatus = \"Processing\" | \"Success\" | \"Error\"\n\nexport type WorkerFetchOutput = { kind: \"Fetch\", status: WorkerOutputStatus, stream?: boolean, grpc?: boolean, error?: any, rejectionError?: boolean, result?: { data?: any, completed?: boolean, error?: any } }\n\nexport type WorkerSyncOutput = { kind: \"Sync\", status: WorkerOutputStatus, error?: any, abortError?: any, result?: any }\n\nexport type WorkerOutput = WorkerFetchOutput | WorkerSyncOutput\n\n\n         \nonmessage = async (e) => {\n    const wi = e.data as WorkerInput\n    try {\n        if (wi.kind == \"WorkerAbort\") {\n            const abc = (self as any).globalAbortController\n            if (abc) {\n                abc.abort()\n            }\n        }\n        else if (wi.kind === \"Fetch\") {\n            let m: WorkerOutput = { kind: wi.kind, status: \"Processing\" }\n            postMessage(m)\n            await _processFetch(wi.input)\n\n        } else if (wi.kind === \"Sync\") {\n            let m: WorkerOutput = { kind: wi.kind, status: \"Processing\" }\n            postMessage(m)\n            await _processSync(wi.input)\n        }\n    } catch (error) {\n        const erm: WorkerOutput = { kind: wi.kind as any, error, status: \"Error\" }\n        postMessage(erm)\n    } finally {\n        (self as any).globalAbortController = null\n    }\n}\n\n         \nasync function _processFetch(_input: any) {\n    const { url, options, responseType, abortable, freq, graphql, grpc, tf } = _input\n    let res: Response = null as any\n    if (abortable) {\n        (self as any).globalAbortController = new AbortController()\n    }\n    try {\n        const gabc = (self as any).globalAbortController\n        if (gabc) {\n            options.signal = gabc.signal\n        }\n        res = await fetch(url, options)\n    } catch (error) {\n        (self as any).globalAbortController = null\n        const resultError = { error, completed: true }\n        const wo: WorkerOutput = { kind: \"Fetch\", status: \"Success\", rejectionError: true, stream: true, result: resultError }\n        postMessage(wo)\n        return;\n    }\n    (self as any).globalAbortController = null\n    console.log(\"*************** Resp : \", res.ok, res.status);\n    if (!res.ok) {\n        const errorResult = { error: res.statusText, completed: true }\n        const wo: WorkerOutput = { kind: \"Fetch\", status: \"Success\", stream: true, result: errorResult }\n        postMessage(wo)\n    } else {\n        const processStream = async <R>(reader: ReadableStreamDefaultReader<R>): Promise<any> => {\n            const result = await reader.read()\n            if (result.done) {\n                const resultSuccess = { completed: true }\n                const wo: WorkerOutput = { kind: \"Fetch\", status: \"Success\", stream: true, result: resultSuccess }\n                postMessage(wo)\n                return\n            } else {\n                let v = result.value\n                if (grpc) {\n                    const gv = (self as any)[\"_grpc_chunk_parser\"](v)\n                    if (gv) { // if we get only headers in respose then ignore that \n                        const dsd = (self as any)[grpc.dsf](gv)\n                        const rdata = tf ? (self as any)[tf](dsd, freq) : dsd\n                        const resultSuccess = { data: rdata }\n                        const wo: WorkerOutput = { kind: \"Fetch\", status: \"Processing\", stream: true, result: resultSuccess }\n                        postMessage(wo)\n                    }\n                } else { // \n                    const rdata = tf ? (self as any)[tf](v, freq) : v\n                    const resultSuccess = { data: rdata }\n                    const wo: WorkerOutput = { kind: \"Fetch\", status: \"Processing\", stream: true, result: resultSuccess }\n                    postMessage(wo)\n                }\n                return processStream(reader)\n            }\n        }\n\n        if (responseType === \"stream\") {\n            processStream(res.body!.getReader())\n        } else {\n            let response = undefined as any\n            if (responseType === \"json\") {\n                response = await res.json()\n            } else if (responseType === \"blob\") {\n                response = await res.blob()\n            } else if (responseType === \"arrayBuffer\") {\n                response = await res.arrayBuffer()\n            } else if (responseType === \"text\") {\n                response = await res.text()\n            }\n\n            if (graphql) {\n                if (graphql.multiOp) { \n                    const resp: any[] = response\n                    let allErrors = true\n                    let datas: any[] = []\n                    const errorsArr: any[] = []\n                    resp.forEach(v => {\n                        if (v.data) {\n                            allErrors = false\n                            datas.push(v.data)\n                            errorsArr.push(v.errors || [])\n                        } else {\n                            datas.push(null)\n                            errorsArr.push(v.error.erros)\n                        }\n                    })\n\n                    const resultSuccess = { data: datas, error: errorsArr, completed: true }\n                    const wo: WorkerOutput = { kind: \"Fetch\", status: \"Success\", result: resultSuccess }\n                    postMessage(wo)\n\n                } else {\n                    if (response.data) {\n                        let rdata = response.data\n                        let successResult = {\n                            data: rdata,\n                            error: response.errors,\n                            completed: true\n                        } // in graphql for successfull operations also we get errors\n                        const wo: WorkerOutput = { kind: \"Fetch\", status: \"Success\", result: successResult }\n                        postMessage(wo)\n                    } else { // graphql error eventhough network op success.\n                        const errorResult = { error: response.error.errors, completed: true }\n                        const wo: WorkerOutput = { kind: \"Fetch\", status: \"Success\", result: errorResult }\n                        postMessage(wo)\n                    }\n                }\n            } else {\n                if (grpc) {\n                    const newBytes = (self as any)[\"_grpc_chunk_parser\"](response)\n                    if (newBytes) {\n                        response = (self as any)[grpc.dsf](newBytes)\n                        if (tf) {\n                            response = (self as any)[tf](response, freq)\n                        }\n                    } else {\n                        response = null //we got only headersin grpc response\n                    }\n                } else {\n                    if (tf) {\n                        response = (self as any)[tf](response, freq)\n                    }\n                }\n                const resultSuccess = { data: response, completed: true }\n                const wo: WorkerOutput = { kind: \"Fetch\", status: \"Success\", result: resultSuccess }\n                postMessage(wo)\n            }\n        }\n    }\n}\n\n\n         \nfunction _getPropsAccess(obj: any, propAccess: string): any {\n    let result: any = obj\n    propAccess.split(\".\").some(v => {\n        const pav = result[v]\n        if (pav) {\n            result = pav\n        } else {\n            result = pav\n            return true\n        }\n    })\n    return result\n}\n\nfunction _getValuesFromState(obj: any, propAccessArray: string[]) {\n    const result: any = {}\n    propAccessArray.forEach(pa => {\n        result[pa] = _getPropsAccess(obj, pa)\n    })\n    return result\n}\n\nasync function _processSync(_input: WorkerSyncInput[\"input\"]) {\n    const { workerFunction, state, abortable, propAccessArray, payload } = _input\n    if (!abortable) {\n        const v = (self as any)[workerFunction]({ _trg_satate: state, payload: payload, propAccessArray: propAccessArray })\n        const wo: WorkerOutput = { kind: \"Sync\", status: \"Success\", result: v }\n        postMessage(wo)\n        return\n    }\n    (self as any).globalAbortController = new AbortController()\n    await new Promise((resolve) => {\n        const abc = (self as any).globalAbortController as AbortController\n        abc.signal.addEventListener(\"abort\", () => {\n            const wo: WorkerOutput = { kind: \"Sync\", status: \"Success\", abortError: new Error(\"aborted by user\"), result: null }\n            postMessage(wo)\n            resolve()\n        })\n        const v = (self as any)[workerFunction]({ _trg_satate: state, payload: payload, propAccessArray: propAccessArray })\n        const wo: WorkerOutput = { kind: \"Sync\", status: \"Success\", result: v }\n        postMessage(wo)\n        resolve()\n    })\n}\n\n\n\n          \n     (self as any)[\"SyncReducer_calculateFactorialOffload\"] = (_input:any) => {\n         const _trg_satate = _input._trg_satate\n         const {n} = _input.payload;\n         let ans = 1;\nfor (let i = 2; i <= n; i++) {\n            ans = ans * i\n        }\n_trg_satate.factorialOffload = ans\n         return _getValuesFromState(_trg_satate,_input.propAccessArray)\n      }\n    \n        "],"sourceRoot":""}