{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/hooks/app-dispatch.ts","webpack:///./src/store/selectors/generated/rest-gen.ts","webpack:///./src/store/apis/rest/test-api/requests/index.ts","webpack:///./src/store/selectors/generated/sync-gen.ts","webpack:///./src/components/AppLayout.tsx","webpack:///./src/index.tsx","webpack:///./src/index.css?cfe4","webpack:///./src/index.css","webpack:///./src/store/index.ts","webpack:///./src/store/apis/rest/github/index.ts","webpack:///./src/store/reducers/generated/sync-gen.ts","webpack:///./src/store/reducers/generated/rest-gen.ts","webpack:///./src/pages/HomePage.tsx","webpack:///./src/pages/SyncPage.tsx","webpack:///./src/components/sync/Counter.tsx","webpack:///./src/components/sync/BookName.tsx","webpack:///./src/components/sync/FactorialSync.tsx","webpack:///./src/components/sync/FactorialOffload.tsx","webpack:///./src/pages/RestPage.tsx","webpack:///./src/components/rest/RestGetPosts.tsx","webpack:///./src/components/rest/RestCreatePost.tsx","webpack:///./src/components/rest/RestUpdatePost.tsx","webpack:///./src/components/rest/RestDeletePost.tsx","webpack:///./src/components/rest/RestLongTask.tsx","webpack:///./src/components/rest/RestOfflineTask.tsx","webpack:///./src/components/rest/RestTodoTypeOps.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","useDispatch","postsSelector","fn","state","rest","posts","dependencies","createPostSelector","createPost","updatePostSelector","updatePost","deletePostSelector","deletePost","longTaskSelector","longTask","offlineTaskSelector","offlineTask","todosSelector","todos","createTodoSelector","createTodo","updateTodoelector","updateTodo","deleteTodoSelector","deleteTodo","type","FetchVariants","GET","url","path","body","POST","PUT","id","DELETE","params","abortable","offline","countSeelctor","sync","count","bookNameSelector","book","factorialSelector","factorial","factorialOffloadSelector","foffload","factorialOffload","status","calculateFactorialOffload","Header","className","Link","to","children","render","StrictMode","Provider","store","Switch","Route","document","getElementById","api","content","default","options","exported","locals","___CSS_LOADER_API_IMPORT___","reducers","SyncReducerGroup","RestReducerGroup","fm","urlOptions","GITHUB_REST_API_URL","githubApiUrlOptions","offloadMiddleware","workerUrl","TypeSafeStore","middleWares","networkOfflne","statusListener","WebNetworkStatus","headers","_trg_satate","_trg_action","payload","_tr_factorial","ans","Error","g","ds","async","undefined","a","offload","stateToWorkerIn","workerResponseToState","_wr","propAccessArray","dpersistKeys","action","f","response","typeOps","propAccess","useSelector","dispatch","onClick","group","bname","setName","useState","onChange","e","target","number","setNumber","showFactorial","setShowFactorial","parseInt","_abortable","loading","abortController","abort","error","useEffect","req","getPostsRequest","fetch","FetchRejectionError","JSON","stringify","console","log","map","title","setTitle","setBody","createPostResult","createPostRequest","updatePostResult","updatePostRequest","deletePostResult","toString","deletePostRequest","longTaskResult","longTaskRequest","offlineTaskResult","offlineTaskRequest","newTodoText","setNewTodoText","updateTodoObj","setUpdateTodoObj","updateTodoText","setUpdateTodoText","text","updateTodoCompleted","setUpdateTodoComplted","completed","getTodosRequest","checked","deleteTodoRequest","handleDeleteTodo","htmlFor","createTodoRequest","isOpen","updateTodoRequest"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAKlC,IAFGe,GAAqBA,EAAoBhB,GAEtCO,EAASC,QACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrBiB,EAAG,GAGAZ,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU8B,QAGnC,IAAIC,EAASH,EAAiB5B,GAAY,CACzCK,EAAGL,EACHgC,GAAG,EACHF,QAAS,IAUV,OANAhB,EAAQd,GAAUW,KAAKoB,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAG/DK,EAAOC,GAAI,EAGJD,EAAOD,QAKfJ,EAAoBO,EAAInB,EAGxBY,EAAoBQ,EAAIN,EAGxBF,EAAoBS,EAAI,SAASL,EAASM,EAAMC,GAC3CX,EAAoBY,EAAER,EAASM,IAClC5B,OAAO+B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEX,EAAoBgB,EAAI,SAASZ,GACX,oBAAXa,QAA0BA,OAAOC,aAC1CpC,OAAO+B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DrC,OAAO+B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKzC,OAAO0C,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBzC,OAAO+B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBS,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAL,EAAoBS,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRX,EAAoBY,EAAI,SAASgB,EAAQC,GAAY,OAAO/C,OAAOC,UAAUC,eAAeC,KAAK2C,EAAQC,IAGzG7B,EAAoB8B,EAAI,GAExB,IAAIC,EAAaC,OAAqB,aAAIA,OAAqB,cAAK,GAChEC,EAAmBF,EAAW5C,KAAKuC,KAAKK,GAC5CA,EAAW5C,KAAOf,EAClB2D,EAAaA,EAAWG,QACxB,IAAI,IAAIvD,EAAI,EAAGA,EAAIoD,EAAWlD,OAAQF,IAAKP,EAAqB2D,EAAWpD,IAC3E,IAAIU,EAAsB4C,EAI1B1C,EAAgBJ,KAAK,CAAC,GAAG,IAElBM,I,kFCvJT,aAWA,UALuB,IACF,EAAA0C,e,+ECDR,EAAAC,cAAkE,CAACC,GAAIC,GAAoDA,EAAMC,KAAKC,MAAMC,aAAa,CAAC,KAAO,CAAC,WAClK,EAAAC,mBAAyE,CAACL,GAAIC,GACvFA,EAAMC,KAAKI,WAAWF,aAAa,CAAC,KAAO,CAAC,gBACnC,EAAAG,mBAAyE,CAACP,GAAIC,GAAsDA,EAAMC,KAAKM,WAAWJ,aAAa,CAAC,KAAO,CAAC,gBAChL,EAAAK,mBAAyE,CAACT,GAAIC,GAAsDA,EAAMC,KAAKQ,WAAWN,aAAa,CAAC,KAAO,CAAC,gBAChL,EAAAO,iBAAqE,CAACX,GAAIC,GAAoDA,EAAMC,KAAKU,SAASR,aAAa,CAAC,KAAO,CAAC,cACxK,EAAAS,oBAA2E,CAACb,GAAIC,GAAuDA,EAAMC,KAAKY,YAAYV,aAAa,CAAC,KAAO,CAAC,iBACpL,EAAAW,cAAkE,CAACf,GAAIC,GAAoDA,EAAMC,KAAKc,MAAMZ,aAAa,CAAC,KAAO,CAAC,WAClK,EAAAa,mBAAyE,CAACjB,GAAIC,GACvFA,EAAMC,KAAKgB,WAAWd,aAAa,CAAC,KAAO,CAAC,gBACnC,EAAAe,kBAAwE,CAACnB,GAAIC,GAAsDA,EAAMC,KAAKkB,WAAWhB,aAAa,CAAC,KAAO,CAAC,gBAC/K,EAAAiB,mBAAyE,CAACrB,GAAIC,GAAsDA,EAAMC,KAAKoB,WAAWlB,aAAa,CAAC,KAAO,CAAC,iB,8EChB7L,aAoFA,UA/EA,MAEI,yBACI,MAAO,CACHmB,KAAM,EAAAC,cAAcC,IAAKC,IAAK,CAAEC,KAAM,2CAI9C,yBAAyBC,GACrB,MAAO,CACHL,KAAM,EAAAC,cAAcK,KACpBD,OACAF,IAAK,CAAEC,KAAM,2CAIrB,yBAAyBC,GACrB,MAAO,CACHL,KAAM,EAAAC,cAAcM,IACpBF,OACAF,IAAK,CAAEC,KAAM,2CAIrB,yBAAyBI,GACrB,MAAO,CACHR,KAAM,EAAAC,cAAcQ,OACpBJ,KAAM,GACNF,IAAK,CAAEC,KAAM,8CAA+CM,OAAQ,CAAEF,QAI9E,uBAAuBG,GACnB,MAAO,CACHX,KAAM,EAAAC,cAAcC,IAAKC,IAAK,CAAEC,KAAM,6CACtCO,aAIR,0BAA0BC,GACtB,MAAO,CACHZ,KAAM,EAAAC,cAAcC,IAAKC,IAAK,CAAEC,KAAM,4CACtCQ,WAIR,yBACI,MAAO,CACHZ,KAAM,EAAAC,cAAcC,IAAKC,IAAK,CAAEC,KAAM,2CAI9C,yBAAyBC,GACrB,MAAO,CACHL,KAAM,EAAAC,cAAcK,KACpBD,OACAF,IAAK,CAAEC,KAAM,2CAIrB,yBAAyBC,GACrB,MAAO,CACHL,KAAM,EAAAC,cAAcM,IACpBF,OACAF,IAAK,CAAEC,KAAM,2CAIrB,yBAAyBI,GACrB,MAAO,CACHR,KAAM,EAAAC,cAAcQ,OACpBJ,KAAM,GACNF,IAAK,CAAEC,KAAM,8CAA+CM,OAAQ,CAAEF,W,gFCxErE,EAAAK,cAA0C,CAACpC,GAAIC,GAA4BA,EAAMoC,KAAKC,MAAMlC,aAAa,CAAC,KAAO,CAAC,WAClH,EAAAmC,iBAA6C,CAACvC,GAAIC,GAA4BA,EAAMoC,KAAKG,KAAKnE,KAAK+B,aAAa,CAAC,KAAO,CAAC,eACzH,EAAAqC,kBAA8C,CAACzC,GAAIC,GAA4BA,EAAMoC,KAAKK,UAAUtC,aAAa,CAAC,KAAO,CAAC,eAC1H,EAAAuC,yBAAkF,CAAC3C,GAAIC,IAChG,MAAM2C,EAAW3C,EAAMoC,KAAKQ,iBACtBC,EAAS7C,EAAMoC,KAAKU,0BAC1B,OAAO,OAAP,QAASL,UAAWE,GAAaE,IACnC1C,aAAa,CAAC,KAAO,CAAC,mBAAmB,gC,oKCZ3C,gBACA,QAKM4C,EAAgC,MAE9B,+BAAKC,UAAU,cACX,wBAAC,EAAAC,KAAI,CAACC,GAAG,IAAIF,UAAU,oBAAkB,kBAGzC,wBAAC,EAAAC,KAAI,CAACC,GAAG,QAAQF,UAAU,oBAAkB,QAC7C,wBAAC,EAAAC,KAAI,CAACC,GAAG,YAAYF,UAAU,oBAAkB,aAiB7D,UAV4C,EAAGG,cAEvC,+BAAKH,UAAU,iBACX,wBAACD,EAAM,MACP,+BAAKC,UAAU,eACVG,K,gLC1BjB,gBACA,WACA,MACA,cACA,OACA,QACA,WACA,WACA,WAEA,UAASC,OACL,wBAAC,UAAMC,WAAU,KACb,wBAAC,gBAAM,KACH,wBAAC,EAAAC,SAAQ,CAACC,MAAO,EAAAA,OACb,wBAAC,EAAAC,OAAM,KACH,wBAAC,EAAAC,MAAK,CAAC/B,KAAK,SACR,wBAAC,UAAQ,OAEb,wBAAC,EAAA+B,MAAK,CAAC/B,KAAK,aACR,wBAAC,UAAQ,OAEb,wBAAC,EAAA+B,MAAK,CAAC/B,KAAK,KACR,wBAAC,UAAQ,WAO7BgC,SAASC,eAAe,U,oBC7B5B,IAAIC,EAAM,EAAQ,IACFC,EAAU,EAAQ,IAIC,iBAFvBA,EAAUA,EAAQ7E,WAAa6E,EAAQC,QAAUD,KAG/CA,EAAU,CAAC,CAAC9F,EAAO1B,EAAIwH,EAAS,MAG9C,IAAIE,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSJ,EAAIC,EAASE,GAEXF,EAAQI,OAASJ,EAAQI,OAAS,IAIjDlG,EAAOD,QAAUkG,G,kBClBjBlG,EADkC,EAAQ,GAChCoG,EAA4B,IAE9BrH,KAAK,CAACkB,EAAO1B,EAAI,62CAA82C,KAEv4C0B,EAAOD,QAAUA,G,mKCNjB,aACA,WACA,WACA,QAEA,QACA,QACA,QAEMqG,EAAW,CAAE/B,KAAM,EAAAgC,iBAAkBnE,KAAM,EAAAoE,kBAE3CC,EAAK,UAAuC,CAC9CC,WAAY,CACR,CAAC,EAAAC,qBAAsB,EAAAC,uBAIzBC,EAAoB,UAAyC,CAAEC,UAAW,4BAKnE,EAAApB,MAAQ,IAAI,EAAAqB,cAAc,CACnCT,WACAU,YAAa,CAACH,EAAmBJ,GACjCQ,cAAe,CAAEC,eAAgB,IAAI,EAAAC,qB,sFCtB5B,EAAAR,oBAAsB,yBAEtB,EAAAC,oBAAsB,KACxB,CAAEQ,QAAS,CAAE,cAAiB,qD,8ECQjB,EAAAb,iBAA0C,CAAE1F,EAChE,CAACwG,EAA6BC,KAE3B,OADUA,EAAY/G,MAEpB,IAAK,YAEM,OAAO,OAAP,wBAAY8G,GAAW,CAAE7C,MAAM6C,EAAY7C,MAAQ,IAEvE,IAAK,YAEe,OAAO,OAAP,wBAAY6C,GAAW,CAAE7C,MAAM6C,EAAY7C,MAAQ,IAEvE,IAAK,cAAgB,CACD,MAAMjE,EAAQ+G,EAAoBC,QAClC,OAAO,OAAP,wBAAYF,GAAW,CAAE3C,KAAI,+BAAK2C,EAAY3C,MAAI,CAACnE,KAAKA,MAE5E,IAAK,qBAAuB,CACZ,MAAMiB,EAAK8F,EAAoBC,QAC/C,IAAIC,EAAgBH,EAAYzC,UACZ6C,EAAM,EAC1B,IAAK,IAAIjJ,EAAI,EAAGA,GAAKgD,EAAGhD,IACZiJ,GAAYjJ,EAGR,OADhBgJ,EAAgBC,EACO,OAAP,wBAAYJ,GAAW,CAAEzC,UAAU4C,IAEnD,IAAK,4BACO,MAAM,IAAIE,MAAM,oGAIzBC,EAAE,cAAcC,GAAG,CAACpD,MAAM,EAAGE,KAAK,CAAEnE,KAAM,SAAWqE,UAAU,EAAGG,iBAAiB,EAAGE,0BAA0B,IAAI7E,EAAE,CAACyH,WAAMC,EAAUC,EAAE,CAAC9C,0BAA0B,CAAC+C,QAAQ,CACxKC,gBACDZ,IACU,IAGTa,sBACD,CAACb,EAA8Bc,IACrB,OAAP,wBAAWd,GAAW,CAACtC,iBAAiBoD,EAAsB,mBAGhEC,gBAAiB,CAAC,uBAClBC,aAAa,M,8EC3CG,EAAA7B,iBAA0C,CAAE3F,EAC/D,CAACwG,EAA6BiB,IACrBjB,EAERM,EAAE,cAAcC,GAAG,CAACvF,MAAM,GAAIG,WAAW,GAAIE,WAAW,GAAIE,WAAW,GAAIE,SAAS,GAAIE,YAAY,GAAIE,MAAM,GAAIE,WAAW,GAAIE,WAAW,GAAIE,WAAW,IAAIpD,EAAE,CAACyH,WAAMC,EAAUC,EAAE,CAAC1F,MAAM,CAACkG,EAAG,CAACC,SAAS,SAAUhG,WAAW,CAAC+F,EAAG,CAACC,SAAS,OAAO1E,KAAK,SAAUpB,WAAW,CAAC6F,EAAG,CAACC,SAAS,OAAO1E,KAAK,SAAUlB,WAAW,CAAC2F,EAAG,CAACC,SAAS,OAAO1E,KAAK,SAAUhB,SAAS,CAACyF,EAAG,CAACC,SAAS,SAAUxF,YAAY,CAACuF,EAAG,CAACC,SAAS,SAAUtF,MAAM,CAACqF,EAAG,CAACC,SAAS,SAAUpF,WAAW,CAACmF,EAAG,CAACC,SAAS,OAAOC,QAAS,CAAElI,KAAK,eAAgBmI,WAAW,cAAe5E,KAAK,SAAUR,WAAW,CAACiF,EAAG,CAACC,SAAS,OAAOC,QAAS,CAAElI,KAAK,aAAcmI,WAAW,cAAe5E,KAAK,SAAUN,WAAW,CAAC+E,EAAG,CAACC,SAAS,OAAOC,QAAS,CAAElI,KAAK,iBAAkBmI,WAAW,cAAe5E,KAAK,UAAWuE,aAAa,M,iLClBlxB,gBACA,WAYA,UAP0C,MAElC,wBAAC,UAAS,mC,kKCRlB,gBACA,WACA,WACA,WACA,WACA,WA+BA,UAtB0C,MAElC,wBAAC,UAAS,KACN,+BAAKlD,UAAU,aACX,+BAAKA,UAAU,mBACX,wBAAC,UAAO,OAEZ,+BAAKA,UAAU,mBACX,wBAAC,UAAQ,OAGb,+BAAKA,UAAU,mBACX,wBAAC,UAAa,OAGlB,+BAAKA,UAAU,mBACX,wBAAC,UAAgB,U,kKC9BrC,gBACA,OACA,OACA,UAwBA,UAnBwC,OACpC,MAAMX,EAAQ,EAAAmE,YAAY,EAAArE,eACpBsE,EAAW,YAOjB,OACI,mCACI,6CACA,kCAAQC,QATQ,KACpBD,EAAS,CAAEE,MAAO,cAAevI,KAAM,gBAQH,aAC/BiE,EACD,kCAAQqE,QARQ,KACpBD,EAAS,CAAEE,MAAO,cAAevI,KAAM,gBAOH,gB,2UCtB5C,gBACA,OACA,OACA,UA4BA,UAxB0C,OACtC,MAAMwI,EAAQ,EAAAJ,YAAY,EAAAlE,kBACpBmE,EAAW,aACVrI,EAAMyI,GAAW,EAAAC,SAASF,GASjC,OACI,mCACI,kC,eAAiBA,GACjB,mCACI,kDACA,iCAAO/H,MAAOT,EAAM2I,SAbNC,IACtBH,EAAQG,EAAEC,OAAOpI,WAeb,kCAAQ6H,QAbU,KAClBtI,EAAK7B,QACLkK,EAAS,CAAEE,MAAO,cAAevI,KAAM,cAAegH,QAAShH,MAW7B,uB,2UC3B9C,gBACA,OACA,OACA,UAgCA,UA3BoD,OAEhD,MAAO8I,EAAQC,GAAa,EAAAL,SAAS,IAC9BM,EAAeC,GAAoB,EAAAP,UAAS,GAC7CrE,EAAY,EAAA+D,YAAY,EAAAhE,mBACxBiE,EAAW,YAajB,OACI,mCACI,oDACA,iCAAO5H,MAAOqI,EAAQ5F,KAAK,SAASyF,SAThBC,IACxB,MAAM3H,EAAIiI,SAASN,EAAEC,OAAOpI,MAAO,IACnCwI,GAAiB,GACjBF,EAAU9H,MAON,kCAAQqH,QAfU,KACtBW,GAAiB,GACjBZ,EAAS,CAAEE,MAAO,cAAevI,KAAM,qBAAsBgH,QAAS8B,MAahC,uBACjCE,GAAiB,kC,gBAAkBF,E,SAAczE,M,2UC/B9D,gBACA,OACA,OACA,UAmDA,UA9C0D,OAEtD,MAAOyE,EAAQC,GAAa,EAAAL,SAAS,IAC9BM,EAAeC,GAAoB,EAAAP,UAAS,GAC7ClE,EAAmB,EAAA4D,YAAY,EAAA9D,0BAC/B+D,EAAW,YAgCjB,OACI,mCACI,uDACA,iCAAO5H,MAAOqI,EAAQ5F,KAAK,SAASyF,SA5BhBC,IACxB,MAAMnI,EAAQmI,EAAEC,OAAOpI,MACjBQ,EAAIiI,SAASzI,EAAO,IAC1BwI,GAAiB,GACjBF,EAAU9H,MAyBN,kCAAQqH,QAlCU,KACtBW,GAAiB,GACjBZ,EAAS,CAAEE,MAAO,cAAevI,KAAM,4BAA6BgH,QAAS,CAAE/F,EAAG6H,EAAQK,YAAY,OAgChE,uBACjC,kCAtBD3E,EAAiB4E,SAAW5E,EAAiB6E,gBACtC,mCACF,6BAA6BP,EAC9B,kCAAQR,QAAS,KAAK,aAAiC,QAAjC,EAAC9D,EAAiB6E,uBAAe,eAAEC,UAAO,UAG/D9E,EAAiB4E,QACf,6BAA6BN,EAC7BE,GAAiBxE,EAAiB+E,MAClC,oBACAP,EACA,gBAAgBF,UAAetE,EAAiBH,YAEhD,O,kKCzCnB,gBACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WAsCA,UA/B0C,MAElC,wBAAC,UAAS,KACN,+BAAKO,UAAU,aACX,+BAAKA,UAAU,mBACX,wBAAC,UAAY,OAEjB,+BAAKA,UAAU,mBACX,wBAAC,UAAe,OAEpB,+BAAKA,UAAU,mBACX,wBAAC,UAAc,OAEnB,+BAAKA,UAAU,mBACX,wBAAC,UAAc,OAEnB,+BAAKA,UAAU,mBACX,wBAAC,UAAY,OAGjB,+BAAKA,UAAU,mBACX,wBAAC,UAAe,OAEpB,+BAAKA,UAAU,mBACX,wBAAC,UAAe,U,2UCvCpC,gBACA,OACA,OACA,UACA,UACA,OA6CA,UAzCkD,OAE9C,MAAM9C,EAAQ,EAAAsG,YAAY,EAAA1G,eACpB2G,EAAW,YAOjB,OALA,EAAAmB,UAAU,KACN,MAAMC,EAAM,UAAaC,kBACzBrB,EAAS,CAAEE,MAAO,cAAevI,KAAM,QAAS2J,MAAOF,KACxD,IAEC3H,EAAMsH,QACC,wDAEPtH,EAAMyH,MACFzH,EAAMyH,iBAAiB,EAAAK,oBAChB,yLAGA,kC,6BAA+BC,KAAKC,UAAUhI,EAAMyH,QAI/DzH,EAAMnE,MACNoM,QAAQC,IAAI,eAAgBlI,EAAMnE,KAAKQ,QAEnC,mCACI,+CACA,8BAAIyG,UAAU,cACT9C,EAAMnE,KAAMsM,IAAI7I,GAAK,8BAAIL,IAAKK,EAAEsC,IAC7B,kCAAKtC,EAAE8I,OACP,iCAAI9I,EAAEmC,WAOnB,O,2UC9CX,gBACA,OACA,OACA,UACA,UA6DA,UAzDwD,OAEpD,MAAO2G,EAAOC,GAAY,EAAAzB,SAAS,KAC5BnF,EAAM6G,GAAW,EAAA1B,SAAS,IAC3BzG,EAAa,EAAAmG,YAAY,EAAApG,oBACzBqG,EAAW,YAgBjB,IAAIgC,EAA8B,KAgBlC,OAfIpI,EAAWmH,UACXiB,EAAmB,wDAEnBpI,EAAWsH,QACXc,EAAmB,kC,8BAAgCR,KAAKC,UAAU7H,EAAWsH,SAE7EtH,EAAWtE,OACX0M,EACI,mCACI,oDACCR,KAAKC,UAAU7H,EAAWtE,QAKhC,mCACH,iDACA,mCACI,oDACA,iCAAO8C,MAAOyJ,EAAOvB,SAlCFC,IACvBuB,EAASvB,EAAEC,OAAOpI,WAmClB,mCACI,mDACA,oCAAUA,MAAO8C,EAAMoF,SAlCLC,IACtBwB,EAAQxB,EAAEC,OAAOpI,WAmCjB,mCACI,kCAAQ6H,QAjCc,KAC1B,MAAMmB,EAAM,UAAaa,kBAAkB,CAAEJ,QAAO3G,SACpD8E,EAAS,CAAEE,MAAO,cAAevI,KAAM,aAAc2J,MAAOF,MA+BlB,gBAE1C,mCACKY,M,2UC3Db,gBACA,OACA,OACA,UACA,UA6DA,UAzDsD,OAElD,MAAOH,EAAOC,GAAY,EAAAzB,SAAS,KAC5BnF,EAAM6G,GAAW,EAAA1B,SAAS,IAC3BvG,EAAa,EAAAiG,YAAY,EAAAlG,oBACzBmG,EAAW,YAgBjB,IAAIkC,EAA8B,KAgBlC,OAfIpI,EAAWiH,UACXmB,EAAmB,0DAEnBpI,EAAWoH,QACXgB,EAAmB,kC,8BAAgCV,KAAKC,UAAU3H,EAAWoH,SAE7EpH,EAAWxE,OACX4M,EACI,mCACI,oDACCV,KAAKC,UAAU3H,EAAWxE,QAKhC,mCACH,iDACA,mCACI,oDACA,iCAAO8C,MAAOyJ,EAAOvB,SAlCFC,IACvBuB,EAASvB,EAAEC,OAAOpI,WAmClB,mCACI,mDACA,oCAAUA,MAAO8C,EAAMoF,SAlCLC,IACtBwB,EAAQxB,EAAEC,OAAOpI,WAmCjB,mCACI,kCAAQ6H,QAjCc,KAC1B,MAAMmB,EAAM,UAAae,kBAAkB,CAAEN,QAAO3G,OAAMG,GAAI,IAC9D2E,EAAS,CAAEE,MAAO,cAAevI,KAAM,aAAc2J,MAAOF,MA+BlB,kBAE1C,mCACKc,M,kKC3Db,gBACA,OACA,OACA,UACA,UA8CA,UA1CsD,OAGlD,MAAMlI,EAAa,EAAA+F,YAAY,EAAAhG,oBACzBiG,EAAW,YAUjB,IAAIoC,EAA8B,KAgBlC,OAfIpI,EAAW+G,UACXqB,EAAmB,0DAEnBpI,EAAWkH,QACXkB,EAAmB,kC,8BAAgCpI,EAAWkH,MAAMmB,aAEpErI,EAAW1E,OACX8M,EACI,mCACI,qDACCZ,KAAKC,UAAUzH,EAAW1E,QAKhC,mCACH,iDACA,mCACI,kCAAQ2K,QAzBgB,KAC5B,MAAMmB,EAAM,UAAakB,kBAAkB,GAC3CtC,EAAS,CAAEE,MAAO,cAAevI,KAAM,aAAc2J,MAAOF,MAuBhB,kBAE5C,mCACKgB,M,kKC5Cb,gBACA,OACA,OACA,UACA,OACA,UAyCA,UApCkD,OAE9C,MAAMlI,EAAW,EAAA6F,YAAY,EAAA9F,kBACvB+F,EAAW,YAOjB,IAAIuC,EAA4B,KAkBhC,OAjBIrI,EAAS6G,SAAW7G,EAAS8G,gBAC7BuB,EAAiB,mCACb,uDACA,kCAAQtC,QAAS,KAAK,aAAyB,QAAzB,EAAC/F,EAAS8G,uBAAe,eAAEC,UAAO,UAErD/G,EAAS6G,QAChBwB,EAAiB,yDACVrI,EAASgH,MAEZqB,EADArI,EAASgH,iBAAiB,EAAAK,qBAAqD,eAA9BrH,EAASgH,MAAMA,MAAMvJ,KACrD,8DAEA,kC,uBAAyBuC,EAASgH,MAAMmB,YAEtDnI,EAAS5E,OAChBiN,EAAiB,kC,oCAAsCrI,EAAS5E,OAIhE,mCACI,uDACA,kCAAQ2K,QA1BkB,KAC9B,MAAMmB,EAAM,UAAgBoB,iBAAgB,GAC5CxC,EAAS,CAAEE,MAAO,cAAevI,KAAM,WAAY2J,MAAOF,MAwBZ,iBACzCmB,K,kKC1Cb,gBACA,OACA,OACA,UACA,OACA,UAuCA,UAlCwD,OAEpD,MAAMnI,EAAc,EAAA2F,YAAY,EAAA5F,qBAC1B6F,EAAW,YAOjB,IAAIyC,EAA+B,KAgBnC,OAfIrI,EAAY2G,QACZ0B,EAAoB,2DACbrI,EAAY8G,MAEfuB,EADArI,EAAY8G,iBAAiB,EAAAK,qBAAwD,eAAjCnH,EAAY8G,MAAMA,MAAMvJ,KACxD,iEAEA,kC,uBAAyByC,EAAY8G,MAAMmB,YAE5DjI,EAAYqB,QACnBgH,EAAoB,wHAEfrI,EAAY9E,OACjBmN,EAAoB,kC,0BAA4BjB,KAAKC,UAAUrH,EAAY9E,QAI3E,mCACI,0DACA,kCAAQ2K,QAxBkB,KAC9B,MAAMmB,EAAM,UAAgBsB,oBAAmB,GAC/C1C,EAAS,CAAEE,MAAO,cAAevI,KAAM,cAAe2J,MAAOF,MAsBf,6BACzCqB,K,2UCxCb,gBACA,OACA,OACA,UACA,UAEA,WA+IA,UA3IwD,OAEpD,MAAMnI,EAAQ,EAAAyF,YAAY,EAAA1F,eACpBG,EAAa,EAAAuF,YAAY,EAAAxF,oBACzBG,EAAa,EAAAqF,YAAY,EAAAtF,mBACzBG,EAAa,EAAAmF,YAAY,EAAApF,oBACzBqF,EAAW,aACV2C,EAAaC,GAAkB,EAAAvC,SAAS,KACxCwC,EAAeC,GAAoB,EAAAzC,YACnC0C,EAAgBC,GAAqB,EAAA3C,SAASwC,EAAgBA,EAAcI,KAAO,KACnFC,EAAqBC,GAAyB,EAAA9C,WAASwC,GAAgBA,EAAcO,WAoC5F,EAAAjC,UAAU,KACN,MAAMC,EAAM,UAAgBiC,kBAC5BrD,EAAS,CAAEE,MAAO,cAAevI,KAAM,QAAS2J,MAAOF,KACxD,IAsDH,OACI,mCACI,8CArDA9G,EAAMyG,QACC,sDACAzG,EAAM4G,MACN,kC,gCAAkC5G,EAAM4G,MAAMmB,YAC9C/H,EAAMhF,KACN,8BAAIiH,UAAU,cAChBjC,EAAMhF,KAAKsM,IAAIvJ,GAAK,8BAAIK,IAAKL,EAAEgD,IAC5B,kCAAKhD,EAAE4K,MACN5K,EAAE+K,WAAa,iCAAOvI,KAAK,WAAWyI,QAASjL,EAAE+K,YAClD,mCACI,kCAAQnD,QAAS,IAAM6C,EAAiBzK,IAAE,e,IAC1C,kCAAQ4H,QAAS,IAtBZ,CAAC5E,IACtB,MAAM+F,EAAM,UAAgBmC,kBAAkBlI,GAC9C2E,EAAS,CAAEE,MAAO,cAAevI,KAAM,aAAc2J,MAAOF,KAoBrBoC,CAAiBnL,EAAEgD,KAAG,mBAKlD,KAuCP,mCACI,mCACI,iCAAOoI,QAAQ,IAAE,cACjB,iCAAOrL,MAAOuK,EAAarC,SAlGVC,IAC7BqC,EAAerC,EAAEC,OAAOpI,WAmGhB,mCACI,kCAAQ6H,QAzFF,KAClB,GAAI0C,EAAY7M,OAAS,EAAG,CACxB,MAAMsL,EAAM,UAAgBsC,kBAAkB,CAAET,KAAMN,EAAaS,WAAW,IAC9EpD,EAAS,CAAEE,MAAO,cAAevI,KAAM,aAAc2J,MAAOF,IAC5DwB,EAAe,OAqFuB,cAGrCC,GAAiB,wBAAC,UAAK,CAACc,QAAQ,GAC7B,mCACI,mC,QAEE,iCAAOvL,MAAO2K,EAAgBzC,SAxGZC,IAChCyC,EAAkBzC,EAAEC,OAAOpI,WAyGf,mC,aAEI,iCAAOyC,KAAK,WACRyI,QAASJ,EAAqB5C,SAzGbC,IACrC4C,EAAsB5C,EAAEC,OAAO8C,aA2GnB,mCACI,kCAAQrD,QAjGH,KACrB,MAAMmB,EAAM,UAAgBwC,kBAAkB,CAC1CvI,GAAIwH,EAAexH,GACnB4H,KAAMF,EAAgBK,UAAWF,IAErCJ,OAAiB5D,GACjBc,EAAS,CAAEE,MAAO,cAAevI,KAAM,aAAc2J,MAAOF,MA2FX,kBAxD7C5G,EAAWuG,QACJ,uDACAvG,EAAW0G,MACX,kC,8BAAgC1G,EAAW0G,MAAMmB,YAEjD,KAMP3H,EAAWqG,QACJ,uDACArG,EAAWwG,MACX,kC,8BAAgCxG,EAAWwG,MAAMmB,YAEjD,KAKPzH,EAAWmG,QACJ,uDACAnG,EAAWsG,MACX,kC,8BAAgCtG,EAAWsG,MAAMmB,YAEjD","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([26,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { useDispatch } from \"@typesafe-store/react\"\nimport { Dispatch } from \"@typesafe-store/store\"\nimport { AppAction } from \"../store\"\n\n\n\nconst useAppDispatch = (): Dispatch<AppAction> => {\n    const dispatch = useDispatch()\n    return dispatch\n}\n\nexport default useAppDispatch","\n           // this file is auto generated on 2020-05-04T11:49:09.964Z, don't modify it\n           import {Selector,SelectorE} from \"@typesafe-store/store\"\n           import { createSelector } from \"@typesafe-store/store\";\nimport { AppState } from \"../..\";\nimport testApiTypes from \"../../apis/rest/test-api/types\";\nexport const postsSelector:Selector<AppState,testApiTypes.requests.GetPosts> = {fn:(state: AppState): testApiTypes.requests.GetPosts => state.rest.posts,dependencies:{\"rest\":[\"posts\"]}}\nexport const createPostSelector:Selector<AppState,testApiTypes.requests.CreatePost> = {fn:(state: AppState): testApiTypes.requests.CreatePost =>\n    state.rest.createPost,dependencies:{\"rest\":[\"createPost\"]}}\nexport const updatePostSelector:Selector<AppState,testApiTypes.requests.UpdatePost> = {fn:(state: AppState): testApiTypes.requests.UpdatePost => state.rest.updatePost,dependencies:{\"rest\":[\"updatePost\"]}}\nexport const deletePostSelector:Selector<AppState,testApiTypes.requests.DeletePost> = {fn:(state: AppState): testApiTypes.requests.DeletePost => state.rest.deletePost,dependencies:{\"rest\":[\"deletePost\"]}}\nexport const longTaskSelector:Selector<AppState,testApiTypes.requests.LongTask> = {fn:(state: AppState): testApiTypes.requests.LongTask => state.rest.longTask,dependencies:{\"rest\":[\"longTask\"]}}\nexport const offlineTaskSelector:Selector<AppState,testApiTypes.requests.OfflineTask> = {fn:(state: AppState): testApiTypes.requests.OfflineTask => state.rest.offlineTask,dependencies:{\"rest\":[\"offlineTask\"]}}\nexport const todosSelector:Selector<AppState,testApiTypes.requests.GetTodos> = {fn:(state: AppState): testApiTypes.requests.GetTodos => state.rest.todos,dependencies:{\"rest\":[\"todos\"]}}\nexport const createTodoSelector:Selector<AppState,testApiTypes.requests.CreateTodo> = {fn:(state: AppState): testApiTypes.requests.CreateTodo =>\n    state.rest.createTodo,dependencies:{\"rest\":[\"createTodo\"]}}\nexport const updateTodoelector:Selector<AppState,testApiTypes.requests.UpdateTodo> = {fn:(state: AppState): testApiTypes.requests.UpdateTodo => state.rest.updateTodo,dependencies:{\"rest\":[\"updateTodo\"]}}\nexport const deleteTodoSelector:Selector<AppState,testApiTypes.requests.DeleteTodo> = {fn:(state: AppState): testApiTypes.requests.DeleteTodo => state.rest.deleteTodo,dependencies:{\"rest\":[\"deleteTodo\"]}}\n\n          ","import testApiTypes from \"../types\";\nimport { FetchVariants } from \"@typesafe-store/store\";\n\n\n\n\nclass TestApiRequests {\n\n    static getPostsRequest(): NonNullable<testApiTypes.requests.GetPosts[\"_fmeta\"]> {\n        return {\n            type: FetchVariants.GET, url: { path: \"https://xpphx.sse.codesandbox.io/posts\" },\n        }\n    }\n\n    static createPostRequest(body: Omit<testApiTypes.Post, \"id\">): NonNullable<testApiTypes.requests.CreatePost[\"_fmeta\"]> {\n        return {\n            type: FetchVariants.POST,\n            body,\n            url: { path: \"https://xpphx.sse.codesandbox.io/posts\" }\n        }\n    }\n\n    static updatePostRequest(body: testApiTypes.Post): NonNullable<testApiTypes.requests.UpdatePost[\"_fmeta\"]> {\n        return {\n            type: FetchVariants.PUT,\n            body,\n            url: { path: \"https://xpphx.sse.codesandbox.io/posts\" }\n        }\n    }\n\n    static deletePostRequest(id: number): NonNullable<testApiTypes.requests.DeletePost[\"_fmeta\"]> {\n        return {\n            type: FetchVariants.DELETE,\n            body: {},\n            url: { path: \"https://xpphx.sse.codesandbox.io/posts/{id}\", params: { id } }\n        }\n    }\n\n    static longTaskRequest(abortable: boolean): NonNullable<testApiTypes.requests.LongTask[\"_fmeta\"]> {\n        return {\n            type: FetchVariants.GET, url: { path: \"https://xpphx.sse.codesandbox.io/longtask\" },\n            abortable\n        }\n    }\n\n    static offlineTaskRequest(offline: boolean): NonNullable<testApiTypes.requests.OfflineTask[\"_fmeta\"]> {\n        return {\n            type: FetchVariants.GET, url: { path: \"https://xpphx.sse.codesandbox.io/offline\" },\n            offline\n        }\n    }\n\n    static getTodosRequest(): NonNullable<testApiTypes.requests.GetTodos[\"_fmeta\"]> {\n        return {\n            type: FetchVariants.GET, url: { path: \"https://xpphx.sse.codesandbox.io/todos\" },\n        }\n    }\n\n    static createTodoRequest(body: Omit<testApiTypes.Todo, \"id\">): NonNullable<testApiTypes.requests.CreateTodo[\"_fmeta\"]> {\n        return {\n            type: FetchVariants.POST,\n            body,\n            url: { path: \"https://xpphx.sse.codesandbox.io/todos\" }\n        }\n    }\n\n    static updateTodoRequest(body: testApiTypes.Todo): NonNullable<testApiTypes.requests.UpdateTodo[\"_fmeta\"]> {\n        return {\n            type: FetchVariants.PUT,\n            body,\n            url: { path: \"https://xpphx.sse.codesandbox.io/todos\" }\n        }\n    }\n\n    static deleteTodoRequest(id: number): NonNullable<testApiTypes.requests.DeleteTodo[\"_fmeta\"]> {\n        return {\n            type: FetchVariants.DELETE,\n            body: {},\n            url: { path: \"https://xpphx.sse.codesandbox.io/todos/{id}\", params: { id } }\n        }\n    }\n\n\n}\n\nexport default TestApiRequests;","\n           // this file is auto generated on 2020-05-02T07:23:46.654Z, don't modify it\n           import {Selector,SelectorE} from \"@typesafe-store/store\"\n           import { createSelector } from \"@typesafe-store/store\"\nimport { AppState } from \"../..\"\nimport selectorTypes from \"../types\"\nexport const countSeelctor:Selector<AppState,number> = {fn:(state: AppState): number => state.sync.count,dependencies:{\"sync\":[\"count\"]}}\nexport const bookNameSelector:Selector<AppState,string> = {fn:(state: AppState): string => state.sync.book.name,dependencies:{\"sync\":[\"book.name\"]}}\nexport const factorialSelector:Selector<AppState,number> = {fn:(state: AppState): number => state.sync.factorial,dependencies:{\"sync\":[\"factorial\"]}}\nexport const factorialOffloadSelector:Selector<AppState,selectorTypes.sync.FactorialOffload> = {fn:(state: AppState): selectorTypes.sync.FactorialOffload => {\n    const foffload = state.sync.factorialOffload\n    const status = state.sync.calculateFactorialOffload\n    return { factorial: foffload, ...status }\n},dependencies:{\"sync\":[\"factorialOffload\",\"calculateFactorialOffload\"]}}\n\n          ","\nimport React from 'react'\nimport { Link } from 'react-router-dom';\n\n\ntype HeaderProps = {};\n\nconst Header: React.FC<HeaderProps> = ({ }) => {\n    return (\n        <div className=\"app-header\">\n            <Link to=\"/\" className=\"app-header__item\">\n                TypeSafe Store\n            </Link>\n            <Link to=\"/sync\" className=\"app-header__item\">Sync</Link>\n            <Link to=\"/rest-api\" className=\"app-header__item\">Rest API</Link>\n        </div>);\n}\n\n\ntype AppLayoutProps = {};\n\nconst AppLayout: React.FC<AppLayoutProps> = ({ children }) => {\n    return (\n        <div className=\"app-container\">\n            <Header />\n            <div className=\"app-content\">\n                {children}\n            </div>\n        </div>);\n}\n\nexport default AppLayout;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { store } from \"./store\"\nimport { Provider } from \"@typesafe-store/react\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport HomePage from './pages/HomePage';\nimport SyncPage from './pages/SyncPage';\nimport RestPage from './pages/RestPage';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <Provider store={store} >\n                <Switch>\n                    <Route path=\"/sync\">\n                        <SyncPage />\n                    </Route>\n                    <Route path=\"/rest-api\">\n                        <RestPage />\n                    </Route>\n                    <Route path=\"/\">\n                        <HomePage />\n                    </Route>\n\n                </Switch>\n            </Provider>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js!./index.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body {\\n    margin: 0;\\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\\n      sans-serif;\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n  }\\n  \\n  code {\\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\\n      monospace;\\n  }\\n  \\n  input:focus,\\n  select:focus,\\n  textarea:focus,\\n  button:focus {\\n      outline: none;\\n  }\\n\\n\\n.app-container{\\n    display: flex;\\n    flex-direction: column;\\n    width: 100%;\\n    height: 100vh;\\n}\\n\\n.app-header {\\n    height: 64px;\\n    background: #2b5fd2;\\n    display: flex;\\n    color: white;\\n    align-items: center;\\n    padding-left: 30px;\\n}\\n\\n.app-header__item {\\n    margin-left: 20px;\\n    cursor: pointer;\\n    color: white;\\n    text-decoration: none;\\n}\\n\\n.app-content{\\n    flex:1;\\n    height: calc(100vh - 64px);\\n    \\n\\n}\\n\\n.sync-page {\\n   display: flex;\\n   margin: auto;\\n   max-width: 1200px;\\n   flex-wrap: wrap;\\n}\\n\\n.sync-page__item {\\n    margin: 30px;\\n    /* box-shadow: 0 2px 4px grey; */\\n    padding: 20px;\\n}\\n\\n.rest-posts {\\n    height: 250px;\\n    width: 200px;\\n    border: 1px solid grey;\\n    overflow: scroll;\\n}\\n\\n.todos-list {\\n    height: 250px;\\n    width: 200px;\\n    border: 1px solid grey;\\n    overflow: scroll;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { TypeSafeStore, GetStateFromReducers, GetActionFromReducers } from \"@typesafe-store/store\";\nimport createFetchMiddleware from \"@typesafe-store/middleware-fetch\";\nimport createOffloadMiddleware from \"@typesafe-store/middleware-offload\";\nimport { GITHUB_REST_API_URL, githubApiUrlOptions } from \"./apis/rest/github\";\n// import { createDevToolsMiddleware } from \"@typesafe-store/middleware-devtools\"\nimport { SyncReducerGroup } from \"./reducers/generated/sync-gen\";\nimport { RestReducerGroup } from \"./reducers/generated/rest-gen\";\nimport { WebNetworkStatus } from \"@typesafe-store/network-status-web\"\n\nconst reducers = { sync: SyncReducerGroup, rest: RestReducerGroup }\n\nconst fm = createFetchMiddleware<typeof reducers>({\n    urlOptions: {\n        [GITHUB_REST_API_URL]: githubApiUrlOptions\n    }\n})\n\nconst offloadMiddleware = createOffloadMiddleware<typeof reducers>({ workerUrl: \"./dist/worker.bundle.js\" })\n\n// const devToolsMiddleware = createDevToolsMiddleware<typeof reducers>({ appName: () => \"REACT_REAL_WORLD\" })\n\n\nexport const store = new TypeSafeStore({\n    reducers,\n    middleWares: [offloadMiddleware, fm],\n    networkOfflne: { statusListener: new WebNetworkStatus() }\n})\n\nexport type AppState = GetStateFromReducers<typeof reducers>\n\nexport type AppAction = GetActionFromReducers<typeof reducers>\n\n","import { FetchGlobalUrlOptions } from \"@typesafe-store/middleware-fetch\"\n\n\nexport const GITHUB_REST_API_URL = \"https://api.github.com\"\n\nexport const githubApiUrlOptions = (): FetchGlobalUrlOptions => {\n    return { headers: { \"Authorization\": \"token 54d0f3b34d136f5c4611a1d86ab235b63d0302a8\" } }\n}","\n           // this file is auto generated on 2020-05-02T08:23:37.057Z, don't modify it\n           import { ReducerGroup,FetchVariants,FetchRequest,SyncActionOffloadStatus} from \"@typesafe-store/store\"\n           import reducersTypes from \"../types\";\nimport { Offload } from \"@typesafe-store/store\";\n\n           export type SyncReducerState = {count:number,book:reducersTypes.sync.Book,factorial:number,factorialOffload:number,calculateFactorialOffload :SyncActionOffloadStatus}\n           \n           export type SyncReducerAction = {name: \"increment\" ,group :\"SyncReducer\"} | {name: \"decrement\" ,group :\"SyncReducer\"} | {name: \"setBookName\" ,group :\"SyncReducer\",payload:string} | {name: \"calculateFactorial\" ,group :\"SyncReducer\",payload:number} | {name: \"calculateFactorialOffload\" ,group :\"SyncReducer\",payload:{n: number,_abortable?: boolean}}\n  \n           export type SyncReducerAsyncAction = undefined\n\n           export type SyncReducerGroupType =  ReducerGroup<SyncReducerState,SyncReducerAction,\"SyncReducer\",SyncReducerAsyncAction>\n  \n           export const SyncReducerGroup: SyncReducerGroupType  = { r: \n    (_trg_satate:SyncReducerState,_trg_action:SyncReducerAction) => {\n       const t = _trg_action.name\n       switch(t) {\n         case \"increment\" : {\n                    \n                    return { ..._trg_satate, count:_trg_satate.count + 1 }\n                }\ncase \"decrement\" : {\n                    \n                    return { ..._trg_satate, count:_trg_satate.count - 1 }\n                }\ncase \"setBookName\" : {\n                    const name = (_trg_action as any).payload as (string)\n                    return { ..._trg_satate, book:{..._trg_satate.book,name:name} }\n                }\ncase \"calculateFactorial\" : {\n                const n = (_trg_action as any).payload as (number)\nlet _tr_factorial = _trg_satate.factorial\n                let ans = 1;\nfor (let i = 2; i <= n; i++) {\n            ans = ans * i\n        }\n_tr_factorial = ans\n                return { ..._trg_satate, factorial:_tr_factorial }\n            }\ncase \"calculateFactorialOffload\" : {\n            throw new Error(\" calculateFactorialOffload is an offload action, looks like you didn't added offlod middlware \")\n        }\n       }\n    }\n  ,g:\"SyncReducer\",ds:{count:0, book:{ name: \"React\" }, factorial:1, factorialOffload:1, calculateFactorialOffload:{}},m:{async:undefined,a:{calculateFactorialOffload:{offload:{\n        stateToWorkerIn: \n      (_trg_satate: SyncReducerState) => {\n          return {}\n      }\n    ,\n        workerResponseToState: \n       (_trg_satate: SyncReducerState,_wr:any) => {\n          return {..._trg_satate,factorialOffload:_wr[\"factorialOffload\"] }\n       }\n    ,\n        propAccessArray: [\"factorialOffload\"]\n    }}},dpersistKeys:[]}}\n  \n          \n\n          ","\n           // this file is auto generated on 2020-05-05T21:49:57.618Z, don't modify it\n           import { ReducerGroup,FetchVariants,FetchRequest,SyncActionOffloadStatus} from \"@typesafe-store/store\"\n           import testApiTypes from \"../../apis/rest/test-api/types\";\nimport { AppendToList, UpdateList, DeleteFromList } from \"@typesafe-store/store\";\n\n           export type RestReducerState = {posts:testApiTypes.requests.GetPosts,createPost:testApiTypes.requests.CreatePost,updatePost:testApiTypes.requests.UpdatePost,deletePost:testApiTypes.requests.DeletePost,longTask:testApiTypes.requests.LongTask,offlineTask:testApiTypes.requests.OfflineTask,todos:testApiTypes.requests.GetTodos,createTodo:testApiTypes.requests.CreateTodo,updateTodo:testApiTypes.requests.UpdateTodo,deleteTodo:testApiTypes.requests.DeleteTodo}\n           \n           export type RestReducerAction = {name:\"no_sync_reducers\",group:\"RestReducer\"}\n  \n           export type RestReducerAsyncAction = {name:\"posts\",group:\"RestReducer\", fetch: NonNullable<testApiTypes.requests.GetPosts[\"_fmeta\"]>  } | {name:\"createPost\",group:\"RestReducer\", fetch: NonNullable<testApiTypes.requests.CreatePost[\"_fmeta\"]>  } | {name:\"updatePost\",group:\"RestReducer\", fetch: NonNullable<testApiTypes.requests.UpdatePost[\"_fmeta\"]>  } | {name:\"deletePost\",group:\"RestReducer\", fetch: NonNullable<testApiTypes.requests.DeletePost[\"_fmeta\"]>  } | {name:\"longTask\",group:\"RestReducer\", fetch: NonNullable<testApiTypes.requests.LongTask[\"_fmeta\"]>  } | {name:\"offlineTask\",group:\"RestReducer\", fetch: NonNullable<testApiTypes.requests.OfflineTask[\"_fmeta\"]>  } | {name:\"todos\",group:\"RestReducer\", fetch: NonNullable<testApiTypes.requests.GetTodos[\"_fmeta\"]>  } | {name:\"createTodo\",group:\"RestReducer\", fetch: NonNullable<testApiTypes.requests.CreateTodo[\"_fmeta\"]>  } | {name:\"updateTodo\",group:\"RestReducer\", fetch: NonNullable<testApiTypes.requests.UpdateTodo[\"_fmeta\"]>  } | {name:\"deleteTodo\",group:\"RestReducer\", fetch: NonNullable<testApiTypes.requests.DeleteTodo[\"_fmeta\"]>  }\n\n           export type RestReducerGroupType =  ReducerGroup<RestReducerState,RestReducerAction,\"RestReducer\",RestReducerAsyncAction>\n  \n           export const RestReducerGroup: RestReducerGroupType  = { r: \n     (_trg_satate:RestReducerState,action:RestReducerAction) => {\n       return _trg_satate;\n      }\n     ,g:\"RestReducer\",ds:{posts:{}, createPost:{}, updatePost:{}, deletePost:{}, longTask:{}, offlineTask:{}, todos:{}, createTodo:{}, updateTodo:{}, deleteTodo:{}},m:{async:undefined,a:{posts:{f: {response:\"json\"} },createPost:{f: {response:\"json\",body:\"json\"} },updatePost:{f: {response:\"json\",body:\"json\"} },deletePost:{f: {response:\"text\",body:\"json\"} },longTask:{f: {response:\"text\"} },offlineTask:{f: {response:\"json\"} },todos:{f: {response:\"json\"} },createTodo:{f: {response:\"json\",typeOps: { name:\"AppendToList\", propAccess:\"todos.data\" },body:\"json\"} },updateTodo:{f: {response:\"json\",typeOps: { name:\"UpdateList\", propAccess:\"todos.data\" },body:\"json\"} },deleteTodo:{f: {response:\"json\",typeOps: { name:\"DeleteFromList\", propAccess:\"todos.data\" },body:\"json\"} }},dpersistKeys:[]}}\n  \n          \n\n          ","import React from 'react'\nimport AppLayout from '../components/AppLayout';\n\n\ntype HomePageProps = {};\n\nconst HomePage: React.FC<HomePageProps> = ({ }) => {\n    return (\n        <AppLayout>\n            Welcome to Typesafe store\n        </AppLayout>);\n}\n\nexport default HomePage;","import React from 'react'\nimport AppLayout from '../components/AppLayout';\nimport Counter from '../components/sync/Counter';\nimport BookName from '../components/sync/BookName';\nimport FactorialSync from '../components/sync/FactorialSync';\nimport FactorialOffload from '../components/sync/FactorialOffload';\n\n\n\n\n\n\ntype SyncPageProps = {};\n\nconst SyncPage: React.FC<SyncPageProps> = ({ }) => {\n    return (\n        <AppLayout>\n            <div className=\"sync-page\">\n                <div className=\"sync-page__item\">\n                    <Counter />\n                </div>\n                <div className=\"sync-page__item\">\n                    <BookName />\n                </div>\n\n                <div className=\"sync-page__item\">\n                    <FactorialSync />\n                </div>\n\n                <div className=\"sync-page__item\">\n                    <FactorialOffload />\n                </div>\n            </div>\n        </AppLayout>);\n}\n\nexport default SyncPage;","import React from 'react'\nimport { useSelector, useDispatch } from '@typesafe-store/react';\nimport { countSeelctor } from '../../store/selectors/generated/sync-gen';\nimport useAppDispatch from '../../hooks/app-dispatch';\n\n\ntype CounterProps = {};\n\nconst Counter: React.FC<CounterProps> = ({ }) => {\n    const count = useSelector(countSeelctor)\n    const dispatch = useAppDispatch()\n    const handleDecrement = () => {\n        dispatch({ group: \"SyncReducer\", name: \"decrement\" })\n    }\n    const handleIncrement = () => {\n        dispatch({ group: \"SyncReducer\", name: \"increment\" })\n    }\n    return (\n        <div>\n            <h3>Counter</h3>\n            <button onClick={handleDecrement}>Decrement</button>\n            {count}\n            <button onClick={handleIncrement}>Increment</button>\n\n        </div>);\n}\n\nexport default Counter;","import React, { useState } from 'react'\nimport { useSelector } from '@typesafe-store/react';\nimport { bookNameSelector } from '../../store/selectors/generated/sync-gen';\nimport useAppDispatch from '../../hooks/app-dispatch';\n\ntype BookNameProps = {};\n\nconst BookName: React.FC<BookNameProps> = ({ }) => {\n    const bname = useSelector(bookNameSelector)\n    const dispatch = useAppDispatch()\n    const [name, setName] = useState(bname)\n    const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setName(e.target.value)\n    }\n    const handleSetBookName = () => {\n        if (name.length) {\n            dispatch({ group: \"SyncReducer\", name: \"setBookName\", payload: name })\n        }\n    }\n    return (\n        <div>\n            <h3>Book Name : {bname}</h3>\n            <div>\n                <label>New Name:</label>\n                <input value={name} onChange={handleNameChange} />\n            </div>\n\n            <button onClick={handleSetBookName}>Set New BookName</button>\n        </div>);\n}\n\nexport default BookName;","import React, { useState } from 'react'\nimport { useSelector } from '@typesafe-store/react';\nimport { factorialSelector } from '../../store/selectors/generated/sync-gen';\nimport useAppDispatch from '../../hooks/app-dispatch';\n\n\ntype FactorialSyncProps = {};\n\nconst FactorialSync: React.FC<FactorialSyncProps> = ({ }) => {\n\n    const [number, setNumber] = useState(0)\n    const [showFactorial, setShowFactorial] = useState(true)\n    const factorial = useSelector(factorialSelector)\n    const dispatch = useAppDispatch()\n\n    const handleButtonClick = () => {\n        setShowFactorial(true)\n        dispatch({ group: \"SyncReducer\", name: \"calculateFactorial\", payload: number })\n    }\n\n    const handleNumberChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const n = parseInt(e.target.value, 10)\n        setShowFactorial(false)\n        setNumber(n)\n    }\n\n    return (\n        <div>\n            <h3>Factorial Sync</h3>\n            <input value={number} type=\"number\" onChange={handleNumberChange} />\n            <button onClick={handleButtonClick}>Calculate Factorial</button>\n            {showFactorial && <h4>Factorial of {number} is : {factorial}</h4>}\n        </div>);\n}\n\nexport default FactorialSync;\n\n","import React, { useState } from 'react'\nimport { useSelector } from '@typesafe-store/react';\nimport { factorialOffloadSelector } from '../../store/selectors/generated/sync-gen';\nimport useAppDispatch from '../../hooks/app-dispatch';\n\n\ntype FactorialOffloadProps = {};\n\nconst FactorialOffload: React.FC<FactorialOffloadProps> = ({ }) => {\n\n    const [number, setNumber] = useState(0)\n    const [showFactorial, setShowFactorial] = useState(true)\n    const factorialOffload = useSelector(factorialOffloadSelector)\n    const dispatch = useAppDispatch()\n\n    const handleButtonClick = () => {\n        setShowFactorial(true)\n        dispatch({ group: \"SyncReducer\", name: \"calculateFactorialOffload\", payload: { n: number, _abortable: true } })\n    }\n\n    const handleNumberChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value\n        const n = parseInt(value, 10)\n        setShowFactorial(false)\n        setNumber(n)\n    }\n\n    const renderFactorial = () => {\n        if (factorialOffload.loading && factorialOffload.abortController) {\n            return <div>\n                {`calculating factorial for ${number}`}\n                <button onClick={() => factorialOffload.abortController?.abort()}>Abort</button>\n            </div>\n        }\n        else if (factorialOffload.loading) {\n            return `calculating factorial for ${number}`\n        } else if (showFactorial && factorialOffload.error) {\n            return `factorial aborted`\n        } else if (showFactorial) {\n            return `Factorial of ${number} is : ${factorialOffload.factorial}`\n        } else {\n            return \"\"\n        }\n    }\n\n    return (\n        <div>\n            <h3>Factorial Offload</h3>\n            <input value={number} type=\"number\" onChange={handleNumberChange} />\n            <button onClick={handleButtonClick}>Calculate Factorial</button>\n            {<h4>{renderFactorial()}</h4>}\n        </div>);\n}\n\nexport default FactorialOffload;\n\n","import React from 'react'\nimport AppLayout from '../components/AppLayout';\nimport RestGetPosts from '../components/rest/RestGetPosts';\nimport RestCreatePosts from '../components/rest/RestCreatePost';\nimport RestUpdatePost from '../components/rest/RestUpdatePost';\nimport RestDeletePost from '../components/rest/RestDeletePost';\nimport RestLongTask from '../components/rest/RestLongTask';\nimport RestOfflineTask from '../components/rest/RestOfflineTask';\nimport RestTodoTypeOps from '../components/rest/RestTodoTypeOps';\n\n\n\n\ntype RestPageProps = {};\n\nconst RestPage: React.FC<RestPageProps> = ({ }) => {\n    return (\n        <AppLayout>\n            <div className=\"sync-page\">\n                <div className=\"sync-page__item\">\n                    <RestGetPosts />\n                </div>\n                <div className=\"sync-page__item\">\n                    <RestCreatePosts />\n                </div>\n                <div className=\"sync-page__item\">\n                    <RestUpdatePost />\n                </div>\n                <div className=\"sync-page__item\">\n                    <RestDeletePost />\n                </div>\n                <div className=\"sync-page__item\">\n                    <RestLongTask />\n                </div>\n\n                <div className=\"sync-page__item\">\n                    <RestOfflineTask />\n                </div>\n                <div className=\"sync-page__item\">\n                    <RestTodoTypeOps />\n                </div>\n\n            </div>\n        </AppLayout>);\n}\n\nexport default RestPage;","import React, { useEffect } from 'react'\nimport { useSelector } from '@typesafe-store/react';\nimport { postsSelector } from '../../store/selectors/generated/rest-gen';\nimport useAppDispatch from '../../hooks/app-dispatch';\nimport BlogRequests from '../../store/apis/rest/test-api/requests';\nimport { FetchRejectionError } from '@typesafe-store/store';\n\ntype RestGetPostsProps = {};\n\nconst RestGetPosts: React.FC<RestGetPostsProps> = ({ }) => {\n\n    const posts = useSelector(postsSelector)\n    const dispatch = useAppDispatch()\n\n    useEffect(() => {\n        const req = BlogRequests.getPostsRequest()\n        dispatch({ group: \"RestReducer\", name: \"posts\", fetch: req })\n    }, [])\n\n    if (posts.loading) {\n        return <h4>Loading posts ....</h4>\n    }\n    if (posts.error) {\n        if (posts.error instanceof FetchRejectionError) {\n            return <h4>Looks like service went hibernate mode , plase  open this link :\n               \"https://xpphx.sse.codesandbox.io/\" manually in browser and then refresh this page</h4>\n        } else {\n            return <h4>Error while getting posts {JSON.stringify(posts.error)}</h4>\n        }\n\n    }\n    if (posts.data) {\n        console.log(\"RestGetPosts\", posts.data.length);\n        return (\n            <div>\n                <h3>Get Posts</h3>\n                <ul className=\"rest-posts\">\n                    {posts.data!.map(p => <li key={p.id}>\n                        <h4>{p.title}</h4>\n                        <p>{p.body}</p>\n                    </li>)}\n                </ul>\n            </div>\n        );\n    }\n\n    return null\n\n}\n\nexport default RestGetPosts;\n\n","import React, { useEffect, useState, ReactNode } from 'react'\nimport { useSelector } from '@typesafe-store/react';\nimport { postsSelector, createPostSelector } from '../../store/selectors/generated/rest-gen';\nimport useAppDispatch from '../../hooks/app-dispatch';\nimport BlogRequests from '../../store/apis/rest/test-api/requests';\n\ntype RestCreatePostsProps = {};\n\nconst RestCreatePosts: React.FC<RestCreatePostsProps> = ({ }) => {\n\n    const [title, setTitle] = useState(\"\")\n    const [body, setBody] = useState(\"\")\n    const createPost = useSelector(createPostSelector)\n    const dispatch = useAppDispatch()\n\n    const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.target.value)\n    }\n\n    const handleBodyChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setBody(e.target.value)\n    }\n\n    const handleCreatePostClick = () => {\n        const req = BlogRequests.createPostRequest({ title, body })\n        dispatch({ group: \"RestReducer\", name: \"createPost\", fetch: req })\n    }\n\n\n    let createPostResult: ReactNode = null\n    if (createPost.loading) {\n        createPostResult = <h4>Creating Post ...</h4>\n    }\n    if (createPost.error) {\n        createPostResult = <h4>Error while creating post: {JSON.stringify(createPost.error)}</h4>\n    }\n    if (createPost.data) {\n        createPostResult = (\n            <div>\n                <h4>Created Post: </h4>\n                {JSON.stringify(createPost.data)}\n            </div>\n        );\n    }\n\n    return <div>\n        <h3>Create Post</h3>\n        <div>\n            <label>Post Title:</label>\n            <input value={title} onChange={handleTitleChange} />\n        </div>\n        <div>\n            <label>Post Body:</label>\n            <textarea value={body} onChange={handleBodyChange} />\n        </div>\n        <div>\n            <button onClick={handleCreatePostClick}>Create Post</button>\n        </div>\n        <div>\n            {createPostResult}\n        </div>\n    </div>\n\n}\n\nexport default RestCreatePosts;\n\n","import React, { useEffect, useState, ReactNode } from 'react'\nimport { useSelector } from '@typesafe-store/react';\nimport { postsSelector, createPostSelector, updatePostSelector } from '../../store/selectors/generated/rest-gen';\nimport useAppDispatch from '../../hooks/app-dispatch';\nimport BlogRequests from '../../store/apis/rest/test-api/requests';\n\ntype RestUpdatePostProps = {};\n\nconst RestUpdatePost: React.FC<RestUpdatePostProps> = ({ }) => {\n\n    const [title, setTitle] = useState(\"\")\n    const [body, setBody] = useState(\"\")\n    const updatePost = useSelector(updatePostSelector)\n    const dispatch = useAppDispatch()\n\n    const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.target.value)\n    }\n\n    const handleBodyChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setBody(e.target.value)\n    }\n\n    const handleUpdatePostClick = () => {\n        const req = BlogRequests.updatePostRequest({ title, body, id: 1 })\n        dispatch({ group: \"RestReducer\", name: \"updatePost\", fetch: req })\n    }\n\n\n    let updatePostResult: ReactNode = null\n    if (updatePost.loading) {\n        updatePostResult = <h4>Updating Post 1 ...</h4>\n    }\n    if (updatePost.error) {\n        updatePostResult = <h4>Error while updating post: {JSON.stringify(updatePost.error)}</h4>\n    }\n    if (updatePost.data) {\n        updatePostResult = (\n            <div>\n                <h4>Updated Post: </h4>\n                {JSON.stringify(updatePost.data)}\n            </div>\n        );\n    }\n\n    return <div>\n        <h3>Update Post</h3>\n        <div>\n            <label>Post Title:</label>\n            <input value={title} onChange={handleTitleChange} />\n        </div>\n        <div>\n            <label>Post Body:</label>\n            <textarea value={body} onChange={handleBodyChange} />\n        </div>\n        <div>\n            <button onClick={handleUpdatePostClick}>Update Post 1</button>\n        </div>\n        <div>\n            {updatePostResult}\n        </div>\n    </div>\n\n}\n\nexport default RestUpdatePost;\n\n","import React, { ReactNode } from 'react'\nimport { useSelector } from '@typesafe-store/react';\nimport { deletePostSelector } from '../../store/selectors/generated/rest-gen';\nimport useAppDispatch from '../../hooks/app-dispatch';\nimport BlogRequests from '../../store/apis/rest/test-api/requests';\n\ntype RestDeletePostProps = {};\n\nconst RestDeletePost: React.FC<RestDeletePostProps> = ({ }) => {\n\n\n    const deletePost = useSelector(deletePostSelector)\n    const dispatch = useAppDispatch()\n\n\n\n    const handleDeleteButtonClick = () => {\n        const req = BlogRequests.deletePostRequest(2)\n        dispatch({ group: \"RestReducer\", name: \"deletePost\", fetch: req })\n    }\n\n\n    let deletePostResult: ReactNode = null\n    if (deletePost.loading) {\n        deletePostResult = <h4>Deelting Post 2 ...</h4>\n    }\n    if (deletePost.error) {\n        deletePostResult = <h4>Error while deleting post: {deletePost.error.toString()}</h4>\n    }\n    if (deletePost.data) {\n        deletePostResult = (\n            <div>\n                <h4>Deleted Post2: </h4>\n                {JSON.stringify(deletePost.data)}\n            </div>\n        );\n    }\n\n    return <div>\n        <h3>Delete Post</h3>\n        <div>\n            <button onClick={handleDeleteButtonClick}>Deelte Post 2</button>\n        </div>\n        <div>\n            {deletePostResult}\n        </div>\n    </div>\n\n}\n\nexport default RestDeletePost;\n\n","import React, { ReactNode } from 'react'\nimport { useSelector } from '@typesafe-store/react';\nimport { longTaskSelector } from '../../store/selectors/generated/rest-gen';\nimport useAppDispatch from '../../hooks/app-dispatch';\nimport { FetchRejectionError } from '@typesafe-store/store';\nimport TestApiRequests from '../../store/apis/rest/test-api/requests';\n\n\ntype RestLongTaskProps = {};\n\nconst RestLongTask: React.FC<RestLongTaskProps> = ({ }) => {\n\n    const longTask = useSelector(longTaskSelector)\n    const dispatch = useAppDispatch()\n\n    const handleLongTaskButtonClick = () => {\n        const req = TestApiRequests.longTaskRequest(true)\n        dispatch({ group: \"RestReducer\", name: \"longTask\", fetch: req })\n    }\n\n    let longTaskResult: ReactNode = null\n    if (longTask.loading && longTask.abortController) {\n        longTaskResult = <div>\n            <h4>Loading Long Task</h4>\n            <button onClick={() => longTask.abortController?.abort()}>Abort</button>\n        </div>\n    } else if (longTask.loading) {\n        longTaskResult = <h4>Loadig long task...</h4>\n    } else if (longTask.error) {\n        if (longTask.error instanceof FetchRejectionError && longTask.error.error.name === \"AbortError\") {\n            longTaskResult = <h4>longTask Aborted by user</h4>\n        } else {\n            longTaskResult = <h4>Error in longtask : {longTask.error.toString()}</h4>\n        }\n    } else if (longTask.data) {\n        longTaskResult = <h4>LongTask completed successfully  {longTask.data}</h4>\n    }\n\n    return (\n        <div>\n            <h3>Long Running Task</h3>\n            <button onClick={handleLongTaskButtonClick} >Fire LongTask</button>\n            {longTaskResult}\n        </div>);\n}\n\nexport default RestLongTask;\n\n","import React, { ReactNode } from 'react'\nimport { useSelector } from '@typesafe-store/react';\nimport { longTaskSelector, offlineTaskSelector } from '../../store/selectors/generated/rest-gen';\nimport useAppDispatch from '../../hooks/app-dispatch';\nimport { FetchRejectionError } from '@typesafe-store/store';\nimport TestApiRequests from '../../store/apis/rest/test-api/requests';\n\n\ntype RestOfflineTaskProps = {};\n\nconst RestOfflineTask: React.FC<RestOfflineTaskProps> = ({ }) => {\n\n    const offlineTask = useSelector(offlineTaskSelector)\n    const dispatch = useAppDispatch()\n\n    const handleLongTaskButtonClick = () => {\n        const req = TestApiRequests.offlineTaskRequest(true)\n        dispatch({ group: \"RestReducer\", name: \"offlineTask\", fetch: req })\n    }\n\n    let offlineTaskResult: ReactNode = null\n    if (offlineTask.loading) {\n        offlineTaskResult = <h4>Loadig offlineTask...</h4>\n    } else if (offlineTask.error) {\n        if (offlineTask.error instanceof FetchRejectionError && offlineTask.error.error.name === \"AbortError\") {\n            offlineTaskResult = <h4>offlineTask Aborted by user</h4>\n        } else {\n            offlineTaskResult = <h4>Error in longtask : {offlineTask.error.toString()}</h4>\n        }\n    } else if (offlineTask.offline) {\n        offlineTaskResult = <h4>User connection is offline, this action will be called again when user back online</h4>\n    }\n    else if (offlineTask.data) {\n        offlineTaskResult = <h4>OfflineTask Response:  {JSON.stringify(offlineTask.data)}</h4>\n    }\n\n    return (\n        <div>\n            <h3>Testing  OfflineTask</h3>\n            <button onClick={handleLongTaskButtonClick} >Go Offline and Then Click</button>\n            {offlineTaskResult}\n        </div>);\n}\n\nexport default RestOfflineTask;\n\n","import React, { useEffect, useState } from 'react'\nimport { useSelector } from '@typesafe-store/react';\nimport { todosSelector, createTodoSelector, updateTodoelector, deleteTodoSelector } from '../../store/selectors/generated/rest-gen';\nimport useAppDispatch from '../../hooks/app-dispatch';\nimport TestApiRequests from '../../store/apis/rest/test-api/requests';\nimport testApiTypes from '../../store/apis/rest/test-api/types';\nimport Modal from \"react-modal\";\n\ntype RestTodoTypeOpsProps = {};\n\nconst RestTodoTypeOps: React.FC<RestTodoTypeOpsProps> = ({ }) => {\n\n    const todos = useSelector(todosSelector)\n    const createTodo = useSelector(createTodoSelector)\n    const updateTodo = useSelector(updateTodoelector)\n    const deleteTodo = useSelector(deleteTodoSelector)\n    const dispatch = useAppDispatch()\n    const [newTodoText, setNewTodoText] = useState(\"\")\n    const [updateTodoObj, setUpdateTodoObj] = useState<testApiTypes.Todo>()\n    const [updateTodoText, setUpdateTodoText] = useState(updateTodoObj ? updateTodoObj.text : \"\")\n    const [updateTodoCompleted, setUpdateTodoComplted] = useState(updateTodoObj ? updateTodoObj.completed : false)\n\n    const handleNewTodoTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setNewTodoText(e.target.value)\n    }\n\n    const handleUpdateTodoTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setUpdateTodoText(e.target.value)\n    }\n\n    const handleUpdateTodoCompletedChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setUpdateTodoComplted(e.target.checked)\n    }\n\n    const handleAddTodo = () => {\n        if (newTodoText.length > 0) {\n            const req = TestApiRequests.createTodoRequest({ text: newTodoText, completed: false })\n            dispatch({ group: \"RestReducer\", name: \"createTodo\", fetch: req })\n            setNewTodoText(\"\")\n        }\n    }\n\n    const handleUpdateTodo = () => {\n        const req = TestApiRequests.updateTodoRequest({\n            id: updateTodoObj!.id,\n            text: updateTodoText, completed: updateTodoCompleted\n        })\n        setUpdateTodoObj(undefined)\n        dispatch({ group: \"RestReducer\", name: \"updateTodo\", fetch: req })\n    }\n\n    const handleDeleteTodo = (id: number) => {\n        const req = TestApiRequests.deleteTodoRequest(id)\n        dispatch({ group: \"RestReducer\", name: \"deleteTodo\", fetch: req })\n    }\n\n    useEffect(() => {\n        const req = TestApiRequests.getTodosRequest()\n        dispatch({ group: \"RestReducer\", name: \"todos\", fetch: req })\n    }, [])\n\n    const renderTodos = () => {\n        if (todos.loading) {\n            return <h4>Loading todos ..</h4>\n        } else if (todos.error) {\n            return <h4>Error while getting todos : ${todos.error.toString()}</h4>\n        } else if (todos.data) {\n            return <ul className=\"todos-list\">\n                {todos.data.map(t => <li key={t.id}>\n                    <h4>{t.text}</h4>\n                    {t.completed && <input type=\"checkbox\" checked={t.completed} />}\n                    <div>\n                        <button onClick={() => setUpdateTodoObj(t)}>Update Todo</button>,\n                        <button onClick={() => handleDeleteTodo(t.id)}>Delete Todo</button>\n                    </div>\n                </li>)}\n            </ul>\n        } else {\n            return null\n        }\n    }\n\n    const renderCreateTodo = () => {\n        if (createTodo.loading) {\n            return <h4>Creating todo ...</h4>\n        } else if (createTodo.error) {\n            return <h4>Error while creating todo..{createTodo.error.toString()}</h4>\n        } else {\n            return null\n        }\n    }\n\n\n    const renderUpdateTodo = () => {\n        if (updateTodo.loading) {\n            return <h4>Updating todo ...</h4>\n        } else if (updateTodo.error) {\n            return <h4>Error while updating todo..{updateTodo.error.toString()}</h4>\n        } else {\n            return null;\n        }\n    }\n\n    const renderDeleteTodo = () => {\n        if (deleteTodo.loading) {\n            return <h4>Deleting todo ...</h4>\n        } else if (deleteTodo.error) {\n            return <h4>Error while deleting todo..{deleteTodo.error.toString()}</h4>\n        } else {\n            return null;\n        }\n    }\n\n    return (\n        <div>\n            <h3>Type Ops</h3>\n            {renderTodos()}\n            <div>\n                <div>\n                    <label htmlFor=\"\">New Todo: </label>\n                    <input value={newTodoText} onChange={handleNewTodoTextChange} />\n                </div>\n                <div>\n                    <button onClick={handleAddTodo}>Add Todo</button>\n                </div>\n            </div>\n            {updateTodoObj && <Modal isOpen={true}>\n                <div>\n                    <div>\n                        Text:\n                      <input value={updateTodoText} onChange={handleUpdateTodoTextChange} />\n                    </div>\n                    <div>\n                        Completed:\n                        <input type=\"checkbox\"\n                            checked={updateTodoCompleted} onChange={handleUpdateTodoCompletedChange} />\n\n                    </div>\n                    <div>\n                        <button onClick={handleUpdateTodo}>Update Todo</button>\n                    </div>\n                </div>\n            </Modal>}\n            {renderCreateTodo()}\n            {renderUpdateTodo()}\n            {renderDeleteTodo()}\n        </div>);\n}\n\nexport default RestTodoTypeOps;"],"sourceRoot":""}